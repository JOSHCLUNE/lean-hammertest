Config = {
  maxHeartbeats := 65536, tactics := #[useRfl, useSimpAll, useSimpAllWithPremises, useAesop 16384, useAesopWithPremises 16384], logFile := evalTacticLog.txt, resultFile := evalTacticResult.txt
  nonterminates := #[
    (useRfl, Field.Emb.Cardinal.succEquiv_coherence),
    (useAesop 16384, Field.Emb.Cardinal.succEquiv_coherence),
    (useAesopWithPremises 16384, Field.Emb.Cardinal.succEquiv_coherence),
    (useAesop 16384, UniformConvergenceCLM.uniformSpace_eq),
    (useAesopWithPremises 16384, UniformConvergenceCLM.uniformSpace_eq)
  ]
}
Start time : 1736931640506

Timestamp : 1736931644394
Testing tactic 0 || UniformConvergenceCLM.instContinuousSemilinearMapClass : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] (𝔖 : Set (Set E)),
  ContinuousSemilinearMapClass (UniformConvergenceCLM σ F 𝔖) σ E F
Result.exception ::
tactic 'rfl' failed, the left-hand side
  inst✝¹
is not definitionally equal to the right-hand side
  UniformConvergenceCLM.instFunLike σ✝ F✝ 𝔖✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁷ : NormedField 𝕜₁✝
inst✝⁶ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁵ : AddCommGroup E✝
inst✝⁴ : Module 𝕜₁✝ E✝
inst✝³ : TopologicalSpace E✝
inst✝² : AddCommGroup F✝
inst✝¹ : Module 𝕜₂✝ F✝
inst✝ : TopologicalSpace F✝
𝔖✝ : Set (Set E✝)
⊢ ContinuousSemilinearMapClass (UniformConvergenceCLM σ✝ F✝ 𝔖✝) σ✝ E✝ F✝ Elapsed time : 1ms

Timestamp : 1736931644398
Testing tactic 1 || UniformConvergenceCLM.instContinuousSemilinearMapClass : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] (𝔖 : Set (Set E)),
  ContinuousSemilinearMapClass (UniformConvergenceCLM σ F 𝔖) σ E F
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931644400
Testing tactic 2 || UniformConvergenceCLM.instContinuousSemilinearMapClass : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] (𝔖 : Set (Set E)),
  ContinuousSemilinearMapClass (UniformConvergenceCLM σ F 𝔖) σ E F
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931644403
Testing tactic 3 || UniformConvergenceCLM.instContinuousSemilinearMapClass : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] (𝔖 : Set (Set E)),
  ContinuousSemilinearMapClass (UniformConvergenceCLM σ F 𝔖) σ E F
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁷ : NormedField 𝕜₁✝
  inst✝⁶ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁵ : AddCommGroup E✝
  inst✝⁴ : Module 𝕜₁✝ E✝
  inst✝³ : TopologicalSpace E✝
  inst✝² : AddCommGroup F✝
  inst✝¹ : Module 𝕜₂✝ F✝
  inst✝ : TopologicalSpace F✝
  𝔖✝ : Set (Set E✝)
  ⊢ ContinuousSemilinearMapClass (UniformConvergenceCLM σ✝ F✝ 𝔖✝) σ✝ E✝ F✝ Elapsed time : 15ms

Timestamp : 1736931644421
Testing tactic 4 || UniformConvergenceCLM.instContinuousSemilinearMapClass : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] (𝔖 : Set (Set E)),
  ContinuousSemilinearMapClass (UniformConvergenceCLM σ F 𝔖) σ E F
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁷ : NormedField 𝕜₁✝
  inst✝⁶ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁵ : AddCommGroup E✝
  inst✝⁴ : Module 𝕜₁✝ E✝
  inst✝³ : TopologicalSpace E✝
  inst✝² : AddCommGroup F✝
  inst✝¹ : Module 𝕜₂✝ F✝
  inst✝ : TopologicalSpace F✝
  𝔖✝ : Set (Set E✝)
  ⊢ ContinuousSemilinearMapClass (UniformConvergenceCLM σ✝ F✝ 𝔖✝) σ✝ E✝ F✝ Elapsed time : 15ms

Timestamp : 1736931644530
Testing tactic 0 || UniformConvergenceCLM.topologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instTopologicalSpace σ F 𝔖 =
    TopologicalSpace.induced (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.topologicalSpace E F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  TopologicalSpace.induced (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) (UniformOnFun.topologicalSpace E✝ F✝ 𝔖✝)
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖✝ =
    TopologicalSpace.induced (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) (UniformOnFun.topologicalSpace E✝ F✝ 𝔖✝)
Elapsed time : 44ms

Timestamp : 1736931644578
Testing tactic 1 || UniformConvergenceCLM.topologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instTopologicalSpace σ F 𝔖 =
    TopologicalSpace.induced (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.topologicalSpace E F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931644584
Testing tactic 2 || UniformConvergenceCLM.topologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instTopologicalSpace σ F 𝔖 =
    TopologicalSpace.induced (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.topologicalSpace E F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 306ms

Timestamp : 1736931644892
Testing tactic 3 || UniformConvergenceCLM.topologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instTopologicalSpace σ F 𝔖 =
    TopologicalSpace.induced (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.topologicalSpace E F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖✝ =
      TopologicalSpace.induced (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) (UniformOnFun.topologicalSpace E✝ F✝ 𝔖✝)
Elapsed time : 300ms

Timestamp : 1736931645195
Testing tactic 4 || UniformConvergenceCLM.topologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instTopologicalSpace σ F 𝔖 =
    TopologicalSpace.induced (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.topologicalSpace E F 𝔖)
Result.exception ::
(deterministic) timeout at `aesop`, maximum number of heartbeats (65536) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.(invalid MessageData.lazy, missing context)
Elapsed time : 2279ms

Timestamp : 1736931647555
Testing tactic 0 || UniformConvergenceCLM.uniformSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instUniformSpace σ F 𝔖 =
    UniformSpace.comap (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.uniformSpace E F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  UniformSpace.comap (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) (UniformOnFun.uniformSpace E✝ F✝ 𝔖✝)
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖✝ =
    UniformSpace.comap (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) (UniformOnFun.uniformSpace E✝ F✝ 𝔖✝)
Elapsed time : 48ms

Timestamp : 1736931647608
Testing tactic 1 || UniformConvergenceCLM.uniformSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instUniformSpace σ F 𝔖 =
    UniformSpace.comap (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.uniformSpace E F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931647614
Testing tactic 2 || UniformConvergenceCLM.uniformSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instUniformSpace σ F 𝔖 =
    UniformSpace.comap (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.uniformSpace E F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 5ms

Timestamp : 1736931647620
Testing tactic 3 || UniformConvergenceCLM.uniformSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instUniformSpace σ F 𝔖 =
    UniformSpace.comap (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.uniformSpace E F 𝔖)
Result.nonterminate
Elapsed time : 0ms

Timestamp : 1736931647622
Testing tactic 4 || UniformConvergenceCLM.uniformSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)),
  UniformConvergenceCLM.instUniformSpace σ F 𝔖 =
    UniformSpace.comap (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe) (UniformOnFun.uniformSpace E F 𝔖)
Result.nonterminate
Elapsed time : 0ms

Timestamp : 1736931647651
Testing tactic 0 || UniformConvergenceCLM.uniformity_toTopologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformSpace.toTopologicalSpace = UniformConvergenceCLM.instTopologicalSpace σ F 𝔖
Result.success
Elapsed time : 1ms

Timestamp : 1736931647654
Testing tactic 1 || UniformConvergenceCLM.uniformity_toTopologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformSpace.toTopologicalSpace = UniformConvergenceCLM.instTopologicalSpace σ F 𝔖
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931647658
Testing tactic 2 || UniformConvergenceCLM.uniformity_toTopologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformSpace.toTopologicalSpace = UniformConvergenceCLM.instTopologicalSpace σ F 𝔖
Result.exception ::
simp_all made no progress
Elapsed time : 1ms

Timestamp : 1736931647661
Testing tactic 3 || UniformConvergenceCLM.uniformity_toTopologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformSpace.toTopologicalSpace = UniformConvergenceCLM.instTopologicalSpace σ F 𝔖
Result.success
Elapsed time : 15ms

Timestamp : 1736931647678
Testing tactic 4 || UniformConvergenceCLM.uniformity_toTopologicalSpace_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformSpace.toTopologicalSpace = UniformConvergenceCLM.instTopologicalSpace σ F 𝔖
Result.success
Elapsed time : 14ms

Timestamp : 1736931647721
Testing tactic 0 || UniformConvergenceCLM.isUniformInducing_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformInducing (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformOnFun.uniformSpace E✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  ⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ IsUniformInducing (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 0ms

Timestamp : 1736931647725
Testing tactic 1 || UniformConvergenceCLM.isUniformInducing_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformInducing (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931647730
Testing tactic 2 || UniformConvergenceCLM.isUniformInducing_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformInducing (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931647735
Testing tactic 3 || UniformConvergenceCLM.isUniformInducing_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformInducing (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ IsUniformInducing (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 19ms

Timestamp : 1736931647757
Testing tactic 4 || UniformConvergenceCLM.isUniformInducing_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformInducing (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ IsUniformInducing (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 20ms

Timestamp : 1736931647810
Testing tactic 0 || UniformConvergenceCLM.isUniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformOnFun.uniformSpace E✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  ⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 1ms

Timestamp : 1736931647814
Testing tactic 1 || UniformConvergenceCLM.isUniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931647819
Testing tactic 2 || UniformConvergenceCLM.isUniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931647825
Testing tactic 3 || UniformConvergenceCLM.isUniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 19ms

Timestamp : 1736931647847
Testing tactic 4 || UniformConvergenceCLM.isUniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 20ms

Timestamp : 1736931647873
Testing tactic 0 || UniformConvergenceCLM.uniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformOnFun.uniformSpace E✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  ⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 1ms

Timestamp : 1736931647877
Testing tactic 1 || UniformConvergenceCLM.uniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931647882
Testing tactic 2 || UniformConvergenceCLM.uniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.success
Elapsed time : 5ms

Timestamp : 1736931647889
Testing tactic 3 || UniformConvergenceCLM.uniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 18ms

Timestamp : 1736931647910
Testing tactic 4 || UniformConvergenceCLM.uniformEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), IsUniformEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.success
Elapsed time : 20ms

Timestamp : 1736931647964
Testing tactic 0 || UniformConvergenceCLM.isEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformOnFun.topologicalSpace E✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  ⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 1ms

Timestamp : 1736931647968
Testing tactic 1 || UniformConvergenceCLM.isEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931647973
Testing tactic 2 || UniformConvergenceCLM.isEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.success
Elapsed time : 9ms

Timestamp : 1736931647984
Testing tactic 3 || UniformConvergenceCLM.isEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 18ms

Timestamp : 1736931648005
Testing tactic 4 || UniformConvergenceCLM.isEmbedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.success
Elapsed time : 34ms

Timestamp : 1736931648044
Testing tactic 0 || UniformConvergenceCLM.embedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformOnFun.topologicalSpace E✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  ⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 1ms

Timestamp : 1736931648048
Testing tactic 1 || UniformConvergenceCLM.embedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931648053
Testing tactic 2 || UniformConvergenceCLM.embedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.success
Elapsed time : 6ms

Timestamp : 1736931648060
Testing tactic 3 || UniformConvergenceCLM.embedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖✝) ∘ DFunLike.coe) Elapsed time : 20ms

Timestamp : 1736931648084
Testing tactic 4 || UniformConvergenceCLM.embedding_coeFn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), Topology.IsEmbedding (⇑(UniformOnFun.ofFun 𝔖) ∘ DFunLike.coe)
Result.success
Elapsed time : 22ms

Timestamp : 1736931648171
Testing tactic 0 || UniformConvergenceCLM.coe_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⇑0 = 0
Result.success
Elapsed time : 2ms

Timestamp : 1736931648176
Testing tactic 1 || UniformConvergenceCLM.coe_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⇑0 = 0
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931648179
Testing tactic 2 || UniformConvergenceCLM.coe_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⇑0 = 0
Result.exception ::
simp_all made no progress
Elapsed time : 1ms

Timestamp : 1736931648182
Testing tactic 3 || UniformConvergenceCLM.coe_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⇑0 = 0
Result.success
Elapsed time : 16ms

Timestamp : 1736931648199
Testing tactic 4 || UniformConvergenceCLM.coe_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⇑0 = 0
Result.success
Elapsed time : 14ms

Timestamp : 1736931648312
Testing tactic 0 || UniformConvergenceCLM.instUniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  AddCommGroup.toAddGroup
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ UniformAddGroup (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 1ms

Timestamp : 1736931648316
Testing tactic 1 || UniformConvergenceCLM.instUniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 1ms

Timestamp : 1736931648319
Testing tactic 2 || UniformConvergenceCLM.instUniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 5ms

Timestamp : 1736931648325
Testing tactic 3 || UniformConvergenceCLM.instUniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ UniformAddGroup (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 16ms

Timestamp : 1736931648343
Testing tactic 4 || UniformConvergenceCLM.instUniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  (𝔖 : Set (Set E)), UniformAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ UniformAddGroup (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 27ms

Timestamp : 1736931648446
Testing tactic 0 || UniformConvergenceCLM.instTopologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), TopologicalAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  AddCommGroup.toAddGroup
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ TopologicalAddGroup (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 0ms

Timestamp : 1736931648449
Testing tactic 1 || UniformConvergenceCLM.instTopologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), TopologicalAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 1ms

Timestamp : 1736931648452
Testing tactic 2 || UniformConvergenceCLM.instTopologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), TopologicalAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 8ms

Timestamp : 1736931648461
Testing tactic 3 || UniformConvergenceCLM.instTopologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), TopologicalAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ TopologicalAddGroup (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 16ms

Timestamp : 1736931648480
Testing tactic 4 || UniformConvergenceCLM.instTopologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), TopologicalAddGroup (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ TopologicalAddGroup (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 22ms

Timestamp : 1736931648545
Testing tactic 0 || UniformConvergenceCLM.continuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → ContinuousEvalConst (UniformConvergenceCLM σ F 𝔖) E F
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  inst✝¹
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
𝔖✝ : Set (Set E✝)
h𝔖✝ : ⋃₀ 𝔖✝ = Set.univ
⊢ ContinuousEvalConst (UniformConvergenceCLM σ✝ F✝ 𝔖✝) E✝ F✝ Elapsed time : 0ms

Timestamp : 1736931648549
Testing tactic 1 || UniformConvergenceCLM.continuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → ContinuousEvalConst (UniformConvergenceCLM σ F 𝔖) E F
Result.exception ::
simp_all made no progress
Elapsed time : 1ms

Timestamp : 1736931648553
Testing tactic 2 || UniformConvergenceCLM.continuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → ContinuousEvalConst (UniformConvergenceCLM σ F 𝔖) E F
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931648559
Testing tactic 3 || UniformConvergenceCLM.continuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → ContinuousEvalConst (UniformConvergenceCLM σ F 𝔖) E F
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  h𝔖✝ : ⋃₀ 𝔖✝ = Set.univ
  ⊢ ContinuousEvalConst (UniformConvergenceCLM σ✝ F✝ 𝔖✝) E✝ F✝ Elapsed time : 17ms

Timestamp : 1736931648581
Testing tactic 4 || UniformConvergenceCLM.continuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → ContinuousEvalConst (UniformConvergenceCLM σ F 𝔖) E F
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  h𝔖✝ : ⋃₀ 𝔖✝ = Set.univ
  ⊢ ContinuousEvalConst (UniformConvergenceCLM σ✝ F✝ 𝔖✝) E✝ F✝ Elapsed time : 20ms

Timestamp : 1736931648639
Testing tactic 0 || UniformConvergenceCLM.t2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : T2Space F] (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → T2Space (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁹ : NormedField 𝕜₁✝
inst✝⁸ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁷ : AddCommGroup E✝
inst✝⁶ : Module 𝕜₁✝ E✝
inst✝⁵ : TopologicalSpace E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace F✝
inst✝¹ : TopologicalAddGroup F✝
inst✝ : T2Space F✝
𝔖✝ : Set (Set E✝)
h𝔖✝ : ⋃₀ 𝔖✝ = Set.univ
⊢ T2Space (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 1ms

Timestamp : 1736931648643
Testing tactic 1 || UniformConvergenceCLM.t2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : T2Space F] (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → T2Space (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931648646
Testing tactic 2 || UniformConvergenceCLM.t2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : T2Space F] (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → T2Space (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931648653
Testing tactic 3 || UniformConvergenceCLM.t2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : T2Space F] (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → T2Space (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁹ : NormedField 𝕜₁✝
  inst✝⁸ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁷ : AddCommGroup E✝
  inst✝⁶ : Module 𝕜₁✝ E✝
  inst✝⁵ : TopologicalSpace E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : T2Space F✝
  𝔖✝ : Set (Set E✝)
  h𝔖✝ : ⋃₀ 𝔖✝ = Set.univ
  ⊢ T2Space (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 16ms

Timestamp : 1736931648672
Testing tactic 4 || UniformConvergenceCLM.t2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : T2Space F] (𝔖 : Set (Set E)), ⋃₀ 𝔖 = Set.univ → T2Space (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁹ : NormedField 𝕜₁✝
  inst✝⁸ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁷ : AddCommGroup E✝
  inst✝⁶ : Module 𝕜₁✝ E✝
  inst✝⁵ : TopologicalSpace E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : T2Space F✝
  𝔖✝ : Set (Set E✝)
  h𝔖✝ : ⋃₀ 𝔖✝ = Set.univ
  ⊢ T2Space (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 17ms

Timestamp : 1736931649001
Testing tactic 0 || UniformConvergenceCLM.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F] (𝔖 : Set (Set E)),
  (∀ S ∈ 𝔖, Bornology.IsVonNBounded 𝕜₁ S) → ContinuousSMul 𝕜₂ (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformSpace.toTopologicalSpace
is not definitionally equal to the right-hand side
  UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹¹ : NormedField 𝕜₁✝
inst✝¹⁰ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁹ : AddCommGroup E✝
inst✝⁸ : Module 𝕜₁✝ E✝
inst✝⁷ : TopologicalSpace E✝
inst✝⁶ : AddCommGroup F✝
inst✝⁵ : Module 𝕜₂✝ F✝
inst✝⁴ : RingHomSurjective σ✝
inst✝³ : RingHomIsometric σ✝
inst✝² : TopologicalSpace F✝
inst✝¹ : TopologicalAddGroup F✝
inst✝ : ContinuousSMul 𝕜₂✝ F✝
𝔖✝ : Set (Set E✝)
h𝔖₃✝ : ∀ S ∈ 𝔖✝, Bornology.IsVonNBounded 𝕜₁✝ S
⊢ ContinuousSMul 𝕜₂✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 0ms

Timestamp : 1736931649006
Testing tactic 1 || UniformConvergenceCLM.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F] (𝔖 : Set (Set E)),
  (∀ S ∈ 𝔖, Bornology.IsVonNBounded 𝕜₁ S) → ContinuousSMul 𝕜₂ (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 10ms

Timestamp : 1736931649017
Testing tactic 2 || UniformConvergenceCLM.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F] (𝔖 : Set (Set E)),
  (∀ S ∈ 𝔖, Bornology.IsVonNBounded 𝕜₁ S) → ContinuousSMul 𝕜₂ (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 14ms

Timestamp : 1736931649033
Testing tactic 3 || UniformConvergenceCLM.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F] (𝔖 : Set (Set E)),
  (∀ S ∈ 𝔖, Bornology.IsVonNBounded 𝕜₁ S) → ContinuousSMul 𝕜₂ (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹¹ : NormedField 𝕜₁✝
  inst✝¹⁰ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁹ : AddCommGroup E✝
  inst✝⁸ : Module 𝕜₁✝ E✝
  inst✝⁷ : TopologicalSpace E✝
  inst✝⁶ : AddCommGroup F✝
  inst✝⁵ : Module 𝕜₂✝ F✝
  inst✝⁴ : RingHomSurjective σ✝
  inst✝³ : RingHomIsometric σ✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousSMul 𝕜₂✝ F✝
  𝔖✝ : Set (Set E✝)
  h𝔖₃✝ : ∀ S ∈ 𝔖✝, Bornology.IsVonNBounded 𝕜₁✝ S
  ⊢ ContinuousSMul 𝕜₂✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 33ms

Timestamp : 1736931649070
Testing tactic 4 || UniformConvergenceCLM.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F] (𝔖 : Set (Set E)),
  (∀ S ∈ 𝔖, Bornology.IsVonNBounded 𝕜₁ S) → ContinuousSMul 𝕜₂ (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹¹ : NormedField 𝕜₁✝
  inst✝¹⁰ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁹ : AddCommGroup E✝
  inst✝⁸ : Module 𝕜₁✝ E✝
  inst✝⁷ : TopologicalSpace E✝
  inst✝⁶ : AddCommGroup F✝
  inst✝⁵ : Module 𝕜₂✝ F✝
  inst✝⁴ : RingHomSurjective σ✝
  inst✝³ : RingHomIsometric σ✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousSMul 𝕜₂✝ F✝
  𝔖✝ : Set (Set E✝)
  h𝔖₃✝ : ∀ S ∈ 𝔖✝, Bornology.IsVonNBounded 𝕜₁✝ S
  ⊢ ContinuousSMul 𝕜₂✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 56ms

Timestamp : 1736931649208
Testing tactic 0 || UniformConvergenceCLM.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {ι : Type u_5} (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      ∀ {p : ι → Prop} {b : ι → Set F},
        (𝓝 0).HasBasis p b → (𝓝 0).HasBasis (fun Si => Si.1 ∈ 𝔖 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
tactic 'rfl' failed, the left-hand side
  fun Si => Si.1 ∈ 𝔖✝ ∧ p✝ Si.2
is not definitionally equal to the right-hand side
  fun Si => {f | ∀ x ∈ Si.1, f x ∈ b✝ Si.2}
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
ι✝ : Type u_5
𝔖✝ : Set (Set E✝)
h𝔖₁✝ : 𝔖✝.Nonempty
h𝔖₂✝ : DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖✝
p✝ : ι✝ → Prop
b✝ : ι✝ → Set F✝
h✝ : (𝓝 0).HasBasis p✝ b✝
⊢ (𝓝 0).HasBasis (fun Si => Si.1 ∈ 𝔖✝ ∧ p✝ Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b✝ Si.2} Elapsed time : 0ms

Timestamp : 1736931649218
Testing tactic 1 || UniformConvergenceCLM.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {ι : Type u_5} (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      ∀ {p : ι → Prop} {b : ι → Set F},
        (𝓝 0).HasBasis p b → (𝓝 0).HasBasis (fun Si => Si.1 ∈ 𝔖 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
simp_all made no progress
Elapsed time : 48ms

Timestamp : 1736931649270
Testing tactic 2 || UniformConvergenceCLM.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {ι : Type u_5} (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      ∀ {p : ι → Prop} {b : ι → Set F},
        (𝓝 0).HasBasis p b → (𝓝 0).HasBasis (fun Si => Si.1 ∈ 𝔖 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
simp_all made no progress
Elapsed time : 53ms

Timestamp : 1736931649327
Testing tactic 3 || UniformConvergenceCLM.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {ι : Type u_5} (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      ∀ {p : ι → Prop} {b : ι → Set F},
        (𝓝 0).HasBasis p b → (𝓝 0).HasBasis (fun Si => Si.1 ∈ 𝔖 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ι✝ : Type u_5
  𝔖✝ : Set (Set E✝)
  h𝔖₁✝ : 𝔖✝.Nonempty
  h𝔖₂✝ : DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖✝
  p✝ : ι✝ → Prop
  b✝ : ι✝ → Set F✝
  h✝ : (𝓝 0).HasBasis p✝ b✝
  ⊢ (𝓝 0).HasBasis (fun Si => Si.1 ∈ 𝔖✝ ∧ p✝ Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b✝ Si.2} Elapsed time : 69ms

Timestamp : 1736931649403
Testing tactic 4 || UniformConvergenceCLM.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {ι : Type u_5} (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      ∀ {p : ι → Prop} {b : ι → Set F},
        (𝓝 0).HasBasis p b → (𝓝 0).HasBasis (fun Si => Si.1 ∈ 𝔖 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ι✝ : Type u_5
  𝔖✝ : Set (Set E✝)
  h𝔖₁✝ : 𝔖✝.Nonempty
  h𝔖₂✝ : DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖✝
  p✝ : ι✝ → Prop
  b✝ : ι✝ → Set F✝
  h✝ : (𝓝 0).HasBasis p✝ b✝
  ⊢ (𝓝 0).HasBasis (fun Si => Si.1 ∈ 𝔖✝ ∧ p✝ Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b✝ Si.2} Elapsed time : 71ms

Timestamp : 1736931649527
Testing tactic 0 || UniformConvergenceCLM.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      (𝓝 0).HasBasis (fun SV => SV.1 ∈ 𝔖 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
tactic 'rfl' failed, the left-hand side
  fun SV => SV.1 ∈ 𝔖✝ ∧ SV.2 ∈ 𝓝 0
is not definitionally equal to the right-hand side
  fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
𝔖✝ : Set (Set E✝)
h𝔖₁✝ : 𝔖✝.Nonempty
h𝔖₂✝ : DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖✝
⊢ (𝓝 0).HasBasis (fun SV => SV.1 ∈ 𝔖✝ ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2} Elapsed time : 0ms

Timestamp : 1736931649536
Testing tactic 1 || UniformConvergenceCLM.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      (𝓝 0).HasBasis (fun SV => SV.1 ∈ 𝔖 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
simp_all made no progress
Elapsed time : 46ms

Timestamp : 1736931649585
Testing tactic 2 || UniformConvergenceCLM.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      (𝓝 0).HasBasis (fun SV => SV.1 ∈ 𝔖 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
simp_all made no progress
Elapsed time : 50ms

Timestamp : 1736931649639
Testing tactic 3 || UniformConvergenceCLM.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      (𝓝 0).HasBasis (fun SV => SV.1 ∈ 𝔖 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  h𝔖₁✝ : 𝔖✝.Nonempty
  h𝔖₂✝ : DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖✝
  ⊢ (𝓝 0).HasBasis (fun SV => SV.1 ∈ 𝔖✝ ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2} Elapsed time : 67ms

Timestamp : 1736931649713
Testing tactic 4 || UniformConvergenceCLM.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)),
  𝔖.Nonempty →
    DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖 →
      (𝓝 0).HasBasis (fun SV => SV.1 ∈ 𝔖 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  h𝔖₁✝ : 𝔖✝.Nonempty
  h𝔖₂✝ : DirectedOn (fun x1 x2 => x1 ⊆ x2) 𝔖✝
  ⊢ (𝓝 0).HasBasis (fun SV => SV.1 ∈ 𝔖✝ ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2} Elapsed time : 68ms

Timestamp : 1736931650032
Testing tactic 0 || UniformConvergenceCLM.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)) {ι : Type u_5} {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b → 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
tactic 'rfl' failed, the left-hand side
  𝓝 0
is not definitionally equal to the right-hand side
  ⨅ s ∈ 𝔖✝, ⨅ i, ⨅ (_ : p✝ i), 𝓟 {f | Set.MapsTo (⇑f) s (b✝ i)}
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
𝔖✝ : Set (Set E✝)
ι✝ : Type u_5
p✝ : ι✝ → Prop
b✝ : ι✝ → Set F✝
h✝ : (𝓝 0).HasBasis p✝ b✝
⊢ 𝓝 0 = ⨅ s ∈ 𝔖✝, ⨅ i, ⨅ (_ : p✝ i), 𝓟 {f | Set.MapsTo (⇑f) s (b✝ i)} Elapsed time : 1ms

Timestamp : 1736931650046
Testing tactic 1 || UniformConvergenceCLM.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)) {ι : Type u_5} {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b → 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
simp_all made no progress
Elapsed time : 54ms

Timestamp : 1736931650106
Testing tactic 2 || UniformConvergenceCLM.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)) {ι : Type u_5} {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b → 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
simp_all made no progress
Elapsed time : 59ms

Timestamp : 1736931650171
Testing tactic 3 || UniformConvergenceCLM.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)) {ι : Type u_5} {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b → 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ι✝ : Type u_5
  p✝ : ι✝ → Prop
  b✝ : ι✝ → Set F✝
  h✝ : (𝓝 0).HasBasis p✝ b✝
  ⊢ 𝓝 0 = ⨅ s ∈ 𝔖✝, ⨅ i, ⨅ (_ : p✝ i), 𝓟 {f | Set.MapsTo (⇑f) s (b✝ i)} Elapsed time : 155ms

Timestamp : 1736931650336
Testing tactic 4 || UniformConvergenceCLM.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)) {ι : Type u_5} {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b → 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ι✝ : Type u_5
  p✝ : ι✝ → Prop
  b✝ : ι✝ → Set F✝
  h✝ : (𝓝 0).HasBasis p✝ b✝
  ⊢ 𝓝 0 = ⨅ s ∈ 𝔖✝, ⨅ i, ⨅ (_ : p✝ i), 𝓟 {f | Set.MapsTo (⇑f) s (b✝ i)} Elapsed time : 155ms

Timestamp : 1736931650555
Testing tactic 0 || UniformConvergenceCLM.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t}
Result.exception ::
tactic 'rfl' failed, the left-hand side
  𝓝 0
is not definitionally equal to the right-hand side
  ⨅ s ∈ 𝔖✝, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t}
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
𝔖✝ : Set (Set E✝)
⊢ 𝓝 0 = ⨅ s ∈ 𝔖✝, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t} Elapsed time : 0ms

Timestamp : 1736931650566
Testing tactic 1 || UniformConvergenceCLM.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t}
Result.exception ::
simp_all made no progress
Elapsed time : 58ms

Timestamp : 1736931650629
Testing tactic 2 || UniformConvergenceCLM.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t}
Result.exception ::
simp_all made no progress
Elapsed time : 61ms

Timestamp : 1736931650695
Testing tactic 3 || UniformConvergenceCLM.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ 𝓝 0 = ⨅ s ∈ 𝔖✝, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t} Elapsed time : 181ms

Timestamp : 1736931650886
Testing tactic 4 || UniformConvergenceCLM.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  (𝔖 : Set (Set E)), 𝓝 0 = ⨅ s ∈ 𝔖, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  ⊢ 𝓝 0 = ⨅ s ∈ 𝔖✝, ⨅ t ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s t} Elapsed time : 205ms

Timestamp : 1736931651181
Testing tactic 0 || UniformConvergenceCLM.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {𝔖 : Set (Set E)} {s : Set E},
  s ∈ 𝔖 → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : UniformConvergenceCLM σ F 𝔖) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
tactic 'rfl' failed, the left-hand side
  fun f => Set.MapsTo (⇑f) s✝ U✝
is not definitionally equal to the right-hand side
  𝓝 0
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
𝔖✝ : Set (Set E✝)
s✝ : Set E✝
hs✝ : s✝ ∈ 𝔖✝
U✝ : Set F✝
hu✝ : U✝ ∈ 𝓝 0
⊢ ∀ᶠ (f : UniformConvergenceCLM σ✝ F✝ 𝔖✝) in 𝓝 0, Set.MapsTo (⇑f) s✝ U✝ Elapsed time : 1ms

Timestamp : 1736931651190
Testing tactic 1 || UniformConvergenceCLM.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {𝔖 : Set (Set E)} {s : Set E},
  s ∈ 𝔖 → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : UniformConvergenceCLM σ F 𝔖) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
simp_all made no progress
Elapsed time : 41ms

Timestamp : 1736931651235
Testing tactic 2 || UniformConvergenceCLM.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {𝔖 : Set (Set E)} {s : Set E},
  s ∈ 𝔖 → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : UniformConvergenceCLM σ F 𝔖) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.subGoals
Elapsed time : 69ms

Timestamp : 1736931651308
Testing tactic 3 || UniformConvergenceCLM.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {𝔖 : Set (Set E)} {s : Set E},
  s ∈ 𝔖 → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : UniformConvergenceCLM σ F 𝔖) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  s✝ : Set E✝
  hs✝ : s✝ ∈ 𝔖✝
  U✝ : Set F✝
  hu✝ : U✝ ∈ 𝓝 0
  ⊢ ∀ᶠ (f : UniformConvergenceCLM σ✝ F✝ 𝔖✝) in 𝓝 0, Set.MapsTo (⇑f) s✝ U✝ Elapsed time : 57ms

Timestamp : 1736931651373
Testing tactic 4 || UniformConvergenceCLM.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  {𝔖 : Set (Set E)} {s : Set E},
  s ∈ 𝔖 → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : UniformConvergenceCLM σ F 𝔖) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  𝔖✝ : Set (Set E✝)
  s✝ : Set E✝
  hs✝ : s✝ ∈ 𝔖✝
  U✝ : Set F✝
  hu✝ : U✝ ∈ 𝓝 0
  ⊢ ∀ᶠ (f : UniformConvergenceCLM σ✝ F✝ 𝔖✝) in 𝓝 0, Set.MapsTo (⇑f) s✝ U✝ Elapsed time : 57ms

Timestamp : 1736931651545
Testing tactic 0 || UniformConvergenceCLM.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : SeminormedRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S → ∀ {s : Set E}, s ∈ 𝔖 → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  inst✝⁴
is not definitionally equal to the right-hand side
  Set.image2 (fun f x => f x) S✝ s✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹² : NormedField 𝕜₁✝
inst✝¹¹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝¹⁰ : AddCommGroup E✝
inst✝⁹ : Module 𝕜₁✝ E✝
inst✝⁸ : TopologicalSpace E✝
inst✝⁷ : AddCommGroup F✝
inst✝⁶ : Module 𝕜₂✝ F✝
R✝ : Type u_5
inst✝⁵ : SeminormedRing R✝
inst✝⁴ : TopologicalSpace F✝
inst✝³ : TopologicalAddGroup F✝
inst✝² : Module R✝ F✝
inst✝¹ : ContinuousConstSMul R✝ F✝
inst✝ : SMulCommClass 𝕜₂✝ R✝ F✝
𝔖✝ : Set (Set E✝)
S✝ : Set (UniformConvergenceCLM σ✝ F✝ 𝔖✝)
hS✝ : Bornology.IsVonNBounded R✝ S✝
s✝ : Set E✝
hs✝ : s✝ ∈ 𝔖✝
⊢ Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s✝) Elapsed time : 0ms

Timestamp : 1736931651551
Testing tactic 1 || UniformConvergenceCLM.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : SeminormedRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S → ∀ {s : Set E}, s ∈ 𝔖 → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
simp_all made no progress
Elapsed time : 7ms

Timestamp : 1736931651560
Testing tactic 2 || UniformConvergenceCLM.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : SeminormedRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S → ∀ {s : Set E}, s ∈ 𝔖 → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
simp_all made no progress
Elapsed time : 9ms

Timestamp : 1736931651572
Testing tactic 3 || UniformConvergenceCLM.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : SeminormedRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S → ∀ {s : Set E}, s ∈ 𝔖 → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : TopologicalSpace E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  R✝ : Type u_5
  inst✝⁵ : SeminormedRing R✝
  inst✝⁴ : TopologicalSpace F✝
  inst✝³ : TopologicalAddGroup F✝
  inst✝² : Module R✝ F✝
  inst✝¹ : ContinuousConstSMul R✝ F✝
  inst✝ : SMulCommClass 𝕜₂✝ R✝ F✝
  𝔖✝ : Set (Set E✝)
  S✝ : Set (UniformConvergenceCLM σ✝ F✝ 𝔖✝)
  hS✝ : Bornology.IsVonNBounded R✝ S✝
  s✝ : Set E✝
  hs✝ : s✝ ∈ 𝔖✝
  ⊢ Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s✝) Elapsed time : 34ms

Timestamp : 1736931651612
Testing tactic 4 || UniformConvergenceCLM.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : SeminormedRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S → ∀ {s : Set E}, s ∈ 𝔖 → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : TopologicalSpace E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  R✝ : Type u_5
  inst✝⁵ : SeminormedRing R✝
  inst✝⁴ : TopologicalSpace F✝
  inst✝³ : TopologicalAddGroup F✝
  inst✝² : Module R✝ F✝
  inst✝¹ : ContinuousConstSMul R✝ F✝
  inst✝ : SMulCommClass 𝕜₂✝ R✝ F✝
  𝔖✝ : Set (Set E✝)
  S✝ : Set (UniformConvergenceCLM σ✝ F✝ 𝔖✝)
  hS✝ : Bornology.IsVonNBounded R✝ S✝
  s✝ : Set E✝
  hs✝ : s✝ ∈ 𝔖✝
  ⊢ Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s✝) Elapsed time : 38ms

Timestamp : 1736931651831
Testing tactic 0 || UniformConvergenceCLM.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : NormedDivisionRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S ↔ ∀ s ∈ 𝔖, Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  Bornology.IsVonNBounded R✝ S✝
is not definitionally equal to the right-hand side
  ∀ s ∈ 𝔖✝, Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s)
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹² : NormedField 𝕜₁✝
inst✝¹¹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝¹⁰ : AddCommGroup E✝
inst✝⁹ : Module 𝕜₁✝ E✝
inst✝⁸ : TopologicalSpace E✝
inst✝⁷ : AddCommGroup F✝
inst✝⁶ : Module 𝕜₂✝ F✝
R✝ : Type u_5
inst✝⁵ : NormedDivisionRing R✝
inst✝⁴ : TopologicalSpace F✝
inst✝³ : TopologicalAddGroup F✝
inst✝² : Module R✝ F✝
inst✝¹ : ContinuousConstSMul R✝ F✝
inst✝ : SMulCommClass 𝕜₂✝ R✝ F✝
𝔖✝ : Set (Set E✝)
S✝ : Set (UniformConvergenceCLM σ✝ F✝ 𝔖✝)
⊢ Bornology.IsVonNBounded R✝ S✝ ↔ ∀ s ∈ 𝔖✝, Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s)
Elapsed time : 1ms

Timestamp : 1736931651838
Testing tactic 1 || UniformConvergenceCLM.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : NormedDivisionRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S ↔ ∀ s ∈ 𝔖, Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
simp_all made no progress
Elapsed time : 10ms

Timestamp : 1736931651850
Testing tactic 2 || UniformConvergenceCLM.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : NormedDivisionRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S ↔ ∀ s ∈ 𝔖, Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
simp_all made no progress
Elapsed time : 26ms

Timestamp : 1736931651879
Testing tactic 3 || UniformConvergenceCLM.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : NormedDivisionRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S ↔ ∀ s ∈ 𝔖, Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.subGoals
Elapsed time : 84ms

Timestamp : 1736931651965
Testing tactic 4 || UniformConvergenceCLM.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {R : Type u_5} [inst_7 : NormedDivisionRing R]
  [inst_8 : TopologicalSpace F] [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F]
  [inst_11 : ContinuousConstSMul R F] [inst_12 : SMulCommClass 𝕜₂ R F] {𝔖 : Set (Set E)}
  {S : Set (UniformConvergenceCLM σ F 𝔖)},
  Bornology.IsVonNBounded R S ↔ ∀ s ∈ 𝔖, Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.subGoals
Elapsed time : 92ms

Timestamp : 1736931652163
Testing tactic 0 || UniformConvergenceCLM.instUniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F] (𝔖 : Set (Set E)),
  UniformContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  SMulZeroClass.toSMul
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹² : NormedField 𝕜₁✝
inst✝¹¹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝¹⁰ : AddCommGroup E✝
inst✝⁹ : Module 𝕜₁✝ E✝
inst✝⁸ : TopologicalSpace E✝
inst✝⁷ : AddCommGroup F✝
inst✝⁶ : Module 𝕜₂✝ F✝
M✝ : Type u_5
inst✝⁵ : Monoid M✝
inst✝⁴ : DistribMulAction M✝ F✝
inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
inst✝² : UniformSpace F✝
inst✝¹ : UniformAddGroup F✝
inst✝ : UniformContinuousConstSMul M✝ F✝
𝔖✝ : Set (Set E✝)
⊢ UniformContinuousConstSMul M✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 1ms

Timestamp : 1736931652168
Testing tactic 1 || UniformConvergenceCLM.instUniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F] (𝔖 : Set (Set E)),
  UniformContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931652173
Testing tactic 2 || UniformConvergenceCLM.instUniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F] (𝔖 : Set (Set E)),
  UniformContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 8ms

Timestamp : 1736931652184
Testing tactic 3 || UniformConvergenceCLM.instUniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F] (𝔖 : Set (Set E)),
  UniformContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : TopologicalSpace E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  M✝ : Type u_5
  inst✝⁵ : Monoid M✝
  inst✝⁴ : DistribMulAction M✝ F✝
  inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
  inst✝² : UniformSpace F✝
  inst✝¹ : UniformAddGroup F✝
  inst✝ : UniformContinuousConstSMul M✝ F✝
  𝔖✝ : Set (Set E✝)
  ⊢ UniformContinuousConstSMul M✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 25ms

Timestamp : 1736931652212
Testing tactic 4 || UniformConvergenceCLM.instUniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F] (𝔖 : Set (Set E)),
  UniformContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : TopologicalSpace E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  M✝ : Type u_5
  inst✝⁵ : Monoid M✝
  inst✝⁴ : DistribMulAction M✝ F✝
  inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
  inst✝² : UniformSpace F✝
  inst✝¹ : UniformAddGroup F✝
  inst✝ : UniformContinuousConstSMul M✝ F✝
  𝔖✝ : Set (Set E✝)
  ⊢ UniformContinuousConstSMul M✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 50ms

Timestamp : 1736931652344
Testing tactic 0 || UniformConvergenceCLM.instContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F] (𝔖 : Set (Set E)), ContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  SMulZeroClass.toSMul
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹² : NormedField 𝕜₁✝
inst✝¹¹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝¹⁰ : AddCommGroup E✝
inst✝⁹ : Module 𝕜₁✝ E✝
inst✝⁸ : TopologicalSpace E✝
inst✝⁷ : AddCommGroup F✝
inst✝⁶ : Module 𝕜₂✝ F✝
M✝ : Type u_5
inst✝⁵ : Monoid M✝
inst✝⁴ : DistribMulAction M✝ F✝
inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
inst✝² : TopologicalSpace F✝
inst✝¹ : TopologicalAddGroup F✝
inst✝ : ContinuousConstSMul M✝ F✝
𝔖✝ : Set (Set E✝)
⊢ ContinuousConstSMul M✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 1ms

Timestamp : 1736931652349
Testing tactic 1 || UniformConvergenceCLM.instContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F] (𝔖 : Set (Set E)), ContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931652353
Testing tactic 2 || UniformConvergenceCLM.instContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F] (𝔖 : Set (Set E)), ContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 11ms

Timestamp : 1736931652365
Testing tactic 3 || UniformConvergenceCLM.instContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F] (𝔖 : Set (Set E)), ContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : TopologicalSpace E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  M✝ : Type u_5
  inst✝⁵ : Monoid M✝
  inst✝⁴ : DistribMulAction M✝ F✝
  inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousConstSMul M✝ F✝
  𝔖✝ : Set (Set E✝)
  ⊢ ContinuousConstSMul M✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 22ms

Timestamp : 1736931652391
Testing tactic 4 || UniformConvergenceCLM.instContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] (M : Type u_5) [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F] (𝔖 : Set (Set E)), ContinuousConstSMul M (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : TopologicalSpace E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  M✝ : Type u_5
  inst✝⁵ : Monoid M✝
  inst✝⁴ : DistribMulAction M✝ F✝
  inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousConstSMul M✝ F✝
  𝔖✝ : Set (Set E✝)
  ⊢ ContinuousConstSMul M✝ (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 28ms

Timestamp : 1736931652466
Testing tactic 0 || UniformConvergenceCLM.tendsto_iff_tendstoUniformlyOn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {ι : Type u_5} {p : Filter ι} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F] (𝔖 : Set (Set E)) {a : ι → UniformConvergenceCLM σ F 𝔖}
  {a₀ : UniformConvergenceCLM σ F 𝔖},
  Filter.Tendsto a p (𝓝 a₀) ↔ ∀ s ∈ 𝔖, TendstoUniformlyOn (fun x1 x2 => (a x1) x2) (⇑a₀) p s
Result.exception ::
tactic 'rfl' failed, the left-hand side
  Filter.Tendsto a✝ p✝ (𝓝 a₀✝)
is not definitionally equal to the right-hand side
  ∀ s ∈ 𝔖✝, TendstoUniformlyOn (fun x1 x2 => (a✝ x1) x2) (⇑a₀✝) p✝ s
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
ι✝ : Type u_5
p✝ : Filter ι✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
𝔖✝ : Set (Set E✝)
a✝ : ι✝ → UniformConvergenceCLM σ✝ F✝ 𝔖✝
a₀✝ : UniformConvergenceCLM σ✝ F✝ 𝔖✝
⊢ Filter.Tendsto a✝ p✝ (𝓝 a₀✝) ↔ ∀ s ∈ 𝔖✝, TendstoUniformlyOn (fun x1 x2 => (a✝ x1) x2) (⇑a₀✝) p✝ s Elapsed time : 1ms

Timestamp : 1736931652473
Testing tactic 1 || UniformConvergenceCLM.tendsto_iff_tendstoUniformlyOn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {ι : Type u_5} {p : Filter ι} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F] (𝔖 : Set (Set E)) {a : ι → UniformConvergenceCLM σ F 𝔖}
  {a₀ : UniformConvergenceCLM σ F 𝔖},
  Filter.Tendsto a p (𝓝 a₀) ↔ ∀ s ∈ 𝔖, TendstoUniformlyOn (fun x1 x2 => (a x1) x2) (⇑a₀) p s
Result.exception ::
simp_all made no progress
Elapsed time : 18ms

Timestamp : 1736931652494
Testing tactic 2 || UniformConvergenceCLM.tendsto_iff_tendstoUniformlyOn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {ι : Type u_5} {p : Filter ι} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F] (𝔖 : Set (Set E)) {a : ι → UniformConvergenceCLM σ F 𝔖}
  {a₀ : UniformConvergenceCLM σ F 𝔖},
  Filter.Tendsto a p (𝓝 a₀) ↔ ∀ s ∈ 𝔖, TendstoUniformlyOn (fun x1 x2 => (a x1) x2) (⇑a₀) p s
Result.exception ::
simp_all made no progress
Elapsed time : 22ms

Timestamp : 1736931652518
Testing tactic 3 || UniformConvergenceCLM.tendsto_iff_tendstoUniformlyOn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {ι : Type u_5} {p : Filter ι} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F] (𝔖 : Set (Set E)) {a : ι → UniformConvergenceCLM σ F 𝔖}
  {a₀ : UniformConvergenceCLM σ F 𝔖},
  Filter.Tendsto a p (𝓝 a₀) ↔ ∀ s ∈ 𝔖, TendstoUniformlyOn (fun x1 x2 => (a x1) x2) (⇑a₀) p s
Result.subGoals
Elapsed time : 66ms

Timestamp : 1736931652588
Testing tactic 4 || UniformConvergenceCLM.tendsto_iff_tendstoUniformlyOn : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {ι : Type u_5} {p : Filter ι} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F] (𝔖 : Set (Set E)) {a : ι → UniformConvergenceCLM σ F 𝔖}
  {a₀ : UniformConvergenceCLM σ F 𝔖},
  Filter.Tendsto a p (𝓝 a₀) ↔ ∀ s ∈ 𝔖, TendstoUniformlyOn (fun x1 x2 => (a x1) x2) (⇑a₀) p s
Result.subGoals
Elapsed time : 67ms

Timestamp : 1736931652753
Testing tactic 0 || UniformConvergenceCLM.isUniformInducing_postcomp : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {G : Type u_5} [inst_7 : AddCommGroup G] [inst_8 : UniformSpace G]
  [inst_9 : UniformAddGroup G] {𝕜₃ : Type u_6} [inst_10 : NormedField 𝕜₃] [inst_11 : Module 𝕜₃ G] {τ : 𝕜₂ →+* 𝕜₃}
  {ρ : 𝕜₁ →+* 𝕜₃} [inst_12 : RingHomCompTriple σ τ ρ] [inst_13 : UniformSpace F] [inst_14 : UniformAddGroup F]
  (g : F →SL[τ] G), IsUniformInducing ⇑g → ∀ (𝔖 : Set (Set E)), IsUniformInducing g.comp
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instUniformSpace ρ✝ G✝ 𝔖✝
is not definitionally equal to the right-hand side
  g✝.comp
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹⁴ : NormedField 𝕜₁✝
inst✝¹³ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝¹² : AddCommGroup E✝
inst✝¹¹ : Module 𝕜₁✝ E✝
inst✝¹⁰ : TopologicalSpace E✝
inst✝⁹ : AddCommGroup F✝
inst✝⁸ : Module 𝕜₂✝ F✝
G✝ : Type u_5
inst✝⁷ : AddCommGroup G✝
inst✝⁶ : UniformSpace G✝
inst✝⁵ : UniformAddGroup G✝
𝕜₃✝ : Type u_6
inst✝⁴ : NormedField 𝕜₃✝
inst✝³ : Module 𝕜₃✝ G✝
τ✝ : 𝕜₂✝ →+* 𝕜₃✝
ρ✝ : 𝕜₁✝ →+* 𝕜₃✝
inst✝² : RingHomCompTriple σ✝ τ✝ ρ✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
g✝ : F✝ →SL[τ✝] G✝
hg✝ : IsUniformInducing ⇑g✝
𝔖✝ : Set (Set E✝)
⊢ IsUniformInducing g✝.comp Elapsed time : 1ms

Timestamp : 1736931652760
Testing tactic 1 || UniformConvergenceCLM.isUniformInducing_postcomp : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {G : Type u_5} [inst_7 : AddCommGroup G] [inst_8 : UniformSpace G]
  [inst_9 : UniformAddGroup G] {𝕜₃ : Type u_6} [inst_10 : NormedField 𝕜₃] [inst_11 : Module 𝕜₃ G] {τ : 𝕜₂ →+* 𝕜₃}
  {ρ : 𝕜₁ →+* 𝕜₃} [inst_12 : RingHomCompTriple σ τ ρ] [inst_13 : UniformSpace F] [inst_14 : UniformAddGroup F]
  (g : F →SL[τ] G), IsUniformInducing ⇑g → ∀ (𝔖 : Set (Set E)), IsUniformInducing g.comp
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931652768
Testing tactic 2 || UniformConvergenceCLM.isUniformInducing_postcomp : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {G : Type u_5} [inst_7 : AddCommGroup G] [inst_8 : UniformSpace G]
  [inst_9 : UniformAddGroup G] {𝕜₃ : Type u_6} [inst_10 : NormedField 𝕜₃] [inst_11 : Module 𝕜₃ G] {τ : 𝕜₂ →+* 𝕜₃}
  {ρ : 𝕜₁ →+* 𝕜₃} [inst_12 : RingHomCompTriple σ τ ρ] [inst_13 : UniformSpace F] [inst_14 : UniformAddGroup F]
  (g : F →SL[τ] G), IsUniformInducing ⇑g → ∀ (𝔖 : Set (Set E)), IsUniformInducing g.comp
Result.exception ::
simp_all made no progress
Elapsed time : 7ms

Timestamp : 1736931652778
Testing tactic 3 || UniformConvergenceCLM.isUniformInducing_postcomp : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {G : Type u_5} [inst_7 : AddCommGroup G] [inst_8 : UniformSpace G]
  [inst_9 : UniformAddGroup G] {𝕜₃ : Type u_6} [inst_10 : NormedField 𝕜₃] [inst_11 : Module 𝕜₃ G] {τ : 𝕜₂ →+* 𝕜₃}
  {ρ : 𝕜₁ →+* 𝕜₃} [inst_12 : RingHomCompTriple σ τ ρ] [inst_13 : UniformSpace F] [inst_14 : UniformAddGroup F]
  (g : F →SL[τ] G), IsUniformInducing ⇑g → ∀ (𝔖 : Set (Set E)), IsUniformInducing g.comp
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹⁴ : NormedField 𝕜₁✝
  inst✝¹³ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝¹² : AddCommGroup E✝
  inst✝¹¹ : Module 𝕜₁✝ E✝
  inst✝¹⁰ : TopologicalSpace E✝
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : Module 𝕜₂✝ F✝
  G✝ : Type u_5
  inst✝⁷ : AddCommGroup G✝
  inst✝⁶ : UniformSpace G✝
  inst✝⁵ : UniformAddGroup G✝
  𝕜₃✝ : Type u_6
  inst✝⁴ : NormedField 𝕜₃✝
  inst✝³ : Module 𝕜₃✝ G✝
  τ✝ : 𝕜₂✝ →+* 𝕜₃✝
  ρ✝ : 𝕜₁✝ →+* 𝕜₃✝
  inst✝² : RingHomCompTriple σ✝ τ✝ ρ✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  g✝ : F✝ →SL[τ✝] G✝
  hg✝ : IsUniformInducing ⇑g✝
  𝔖✝ : Set (Set E✝)
  ⊢ IsUniformInducing g✝.comp Elapsed time : 27ms

Timestamp : 1736931652811
Testing tactic 4 || UniformConvergenceCLM.isUniformInducing_postcomp : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  {F : Type u_4} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {G : Type u_5} [inst_7 : AddCommGroup G] [inst_8 : UniformSpace G]
  [inst_9 : UniformAddGroup G] {𝕜₃ : Type u_6} [inst_10 : NormedField 𝕜₃] [inst_11 : Module 𝕜₃ G] {τ : 𝕜₂ →+* 𝕜₃}
  {ρ : 𝕜₁ →+* 𝕜₃} [inst_12 : RingHomCompTriple σ τ ρ] [inst_13 : UniformSpace F] [inst_14 : UniformAddGroup F]
  (g : F →SL[τ] G), IsUniformInducing ⇑g → ∀ (𝔖 : Set (Set E)), IsUniformInducing g.comp
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹⁴ : NormedField 𝕜₁✝
  inst✝¹³ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝¹² : AddCommGroup E✝
  inst✝¹¹ : Module 𝕜₁✝ E✝
  inst✝¹⁰ : TopologicalSpace E✝
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : Module 𝕜₂✝ F✝
  G✝ : Type u_5
  inst✝⁷ : AddCommGroup G✝
  inst✝⁶ : UniformSpace G✝
  inst✝⁵ : UniformAddGroup G✝
  𝕜₃✝ : Type u_6
  inst✝⁴ : NormedField 𝕜₃✝
  inst✝³ : Module 𝕜₃✝ G✝
  τ✝ : 𝕜₂✝ →+* 𝕜₃✝
  ρ✝ : 𝕜₁✝ →+* 𝕜₃✝
  inst✝² : RingHomCompTriple σ✝ τ✝ ρ✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  g✝ : F✝ →SL[τ✝] G✝
  hg✝ : IsUniformInducing ⇑g✝
  𝔖✝ : Set (Set E✝)
  ⊢ IsUniformInducing g✝.comp Elapsed time : 31ms

Timestamp : 1736931653080
Testing tactic 0 || UniformConvergenceCLM.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₂ F] [inst_10 : CompleteSpace F] {𝔖 : Set (Set E)},
  Topology.RestrictGenTopology 𝔖 → ⋃₀ 𝔖 = Set.univ → CompleteSpace (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM σ✝ F✝ 𝔖✝
is not definitionally equal to the right-hand side
  UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹⁰ : NormedField 𝕜₁✝
inst✝⁹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁸ : AddCommGroup E✝
inst✝⁷ : Module 𝕜₁✝ E✝
inst✝⁶ : TopologicalSpace E✝
inst✝⁵ : AddCommGroup F✝
inst✝⁴ : Module 𝕜₂✝ F✝
inst✝³ : UniformSpace F✝
inst✝² : UniformAddGroup F✝
inst✝¹ : ContinuousSMul 𝕜₂✝ F✝
inst✝ : CompleteSpace F✝
𝔖✝ : Set (Set E✝)
h𝔖✝ : Topology.RestrictGenTopology 𝔖✝
h𝔖U✝ : ⋃₀ 𝔖✝ = Set.univ
⊢ CompleteSpace (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 0ms

Timestamp : 1736931653085
Testing tactic 1 || UniformConvergenceCLM.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₂ F] [inst_10 : CompleteSpace F] {𝔖 : Set (Set E)},
  Topology.RestrictGenTopology 𝔖 → ⋃₀ 𝔖 = Set.univ → CompleteSpace (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931653091
Testing tactic 2 || UniformConvergenceCLM.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₂ F] [inst_10 : CompleteSpace F] {𝔖 : Set (Set E)},
  Topology.RestrictGenTopology 𝔖 → ⋃₀ 𝔖 = Set.univ → CompleteSpace (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
simp_all made no progress
Elapsed time : 680ms

Timestamp : 1736931653774
Testing tactic 3 || UniformConvergenceCLM.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₂ F] [inst_10 : CompleteSpace F] {𝔖 : Set (Set E)},
  Topology.RestrictGenTopology 𝔖 → ⋃₀ 𝔖 = Set.univ → CompleteSpace (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹⁰ : NormedField 𝕜₁✝
  inst✝⁹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁸ : AddCommGroup E✝
  inst✝⁷ : Module 𝕜₁✝ E✝
  inst✝⁶ : TopologicalSpace E✝
  inst✝⁵ : AddCommGroup F✝
  inst✝⁴ : Module 𝕜₂✝ F✝
  inst✝³ : UniformSpace F✝
  inst✝² : UniformAddGroup F✝
  inst✝¹ : ContinuousSMul 𝕜₂✝ F✝
  inst✝ : CompleteSpace F✝
  𝔖✝ : Set (Set E✝)
  h𝔖✝ : Topology.RestrictGenTopology 𝔖✝
  h𝔖U✝ : ⋃₀ 𝔖✝ = Set.univ
  ⊢ CompleteSpace (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 21ms

Timestamp : 1736931653800
Testing tactic 4 || UniformConvergenceCLM.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₂ F] [inst_10 : CompleteSpace F] {𝔖 : Set (Set E)},
  Topology.RestrictGenTopology 𝔖 → ⋃₀ 𝔖 = Set.univ → CompleteSpace (UniformConvergenceCLM σ F 𝔖)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹⁰ : NormedField 𝕜₁✝
  inst✝⁹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁸ : AddCommGroup E✝
  inst✝⁷ : Module 𝕜₁✝ E✝
  inst✝⁶ : TopologicalSpace E✝
  inst✝⁵ : AddCommGroup F✝
  inst✝⁴ : Module 𝕜₂✝ F✝
  inst✝³ : UniformSpace F✝
  inst✝² : UniformAddGroup F✝
  inst✝¹ : ContinuousSMul 𝕜₂✝ F✝
  inst✝ : CompleteSpace F✝
  𝔖✝ : Set (Set E✝)
  h𝔖✝ : Topology.RestrictGenTopology 𝔖✝
  h𝔖U✝ : ⋃₀ 𝔖✝ = Set.univ
  ⊢ CompleteSpace (UniformConvergenceCLM σ✝ F✝ 𝔖✝) Elapsed time : 29ms

Timestamp : 1736931653888
Testing tactic 0 || UniformConvergenceCLM.uniformSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instUniformSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instUniformSpace σ F 𝔖₂
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖₁✝
is not definitionally equal to the right-hand side
  UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖₂✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
𝔖₁✝ 𝔖₂✝ : Set (Set E✝)
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
h✝ : 𝔖₂✝ ⊆ 𝔖₁✝
⊢ UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖₁✝ ≤ UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖₂✝
Elapsed time : 12ms

Timestamp : 1736931653903
Testing tactic 1 || UniformConvergenceCLM.uniformSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instUniformSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instUniformSpace σ F 𝔖₂
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931653908
Testing tactic 2 || UniformConvergenceCLM.uniformSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instUniformSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instUniformSpace σ F 𝔖₂
Result.subGoals
Elapsed time : 17ms

Timestamp : 1736931653927
Testing tactic 3 || UniformConvergenceCLM.uniformSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instUniformSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instUniformSpace σ F 𝔖₂
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  𝔖₁✝ 𝔖₂✝ : Set (Set E✝)
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  h✝ : 𝔖₂✝ ⊆ 𝔖₁✝
  ⊢ UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖₁✝ ≤ UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖₂✝
Elapsed time : 32ms

Timestamp : 1736931653962
Testing tactic 4 || UniformConvergenceCLM.uniformSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : UniformSpace F]
  [inst_8 : UniformAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instUniformSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instUniformSpace σ F 𝔖₂
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  𝔖₁✝ 𝔖₂✝ : Set (Set E✝)
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  h✝ : 𝔖₂✝ ⊆ 𝔖₁✝
  ⊢ UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖₁✝ ≤ UniformConvergenceCLM.instUniformSpace σ✝ F✝ 𝔖₂✝
Elapsed time : 45ms

Timestamp : 1736931654051
Testing tactic 0 || UniformConvergenceCLM.topologicalSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : TopologicalSpace F]
  [inst_8 : TopologicalAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₂
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖₁✝
is not definitionally equal to the right-hand side
  UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖₂✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_3
F✝ : Type u_4
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : AddCommGroup F✝
inst✝² : Module 𝕜₂✝ F✝
𝔖₁✝ 𝔖₂✝ : Set (Set E✝)
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
h✝ : 𝔖₂✝ ⊆ 𝔖₁✝
⊢ UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖₁✝ ≤ UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖₂✝
Elapsed time : 10ms

Timestamp : 1736931654065
Testing tactic 1 || UniformConvergenceCLM.topologicalSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : TopologicalSpace F]
  [inst_8 : TopologicalAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₂
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931654069
Testing tactic 2 || UniformConvergenceCLM.topologicalSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : TopologicalSpace F]
  [inst_8 : TopologicalAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₂
Result.exception ::
simp_all made no progress
Elapsed time : 5ms

Timestamp : 1736931654075
Testing tactic 3 || UniformConvergenceCLM.topologicalSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : TopologicalSpace F]
  [inst_8 : TopologicalAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₂
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  𝔖₁✝ 𝔖₂✝ : Set (Set E✝)
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  h✝ : 𝔖₂✝ ⊆ 𝔖₁✝
  ⊢ UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖₁✝ ≤ UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖₂✝
Elapsed time : 30ms

Timestamp : 1736931654108
Testing tactic 4 || UniformConvergenceCLM.topologicalSpace_mono : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E : Type u_3}
  (F : Type u_4) [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : TopologicalSpace E]
  [inst_5 : AddCommGroup F] [inst_6 : Module 𝕜₂ F] {𝔖₁ 𝔖₂ : Set (Set E)} [inst_7 : TopologicalSpace F]
  [inst_8 : TopologicalAddGroup F],
  𝔖₂ ⊆ 𝔖₁ → UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₁ ≤ UniformConvergenceCLM.instTopologicalSpace σ F 𝔖₂
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_3
  F✝ : Type u_4
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : AddCommGroup F✝
  inst✝² : Module 𝕜₂✝ F✝
  𝔖₁✝ 𝔖₂✝ : Set (Set E✝)
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  h✝ : 𝔖₂✝ ⊆ 𝔖₁✝
  ⊢ UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖₁✝ ≤ UniformConvergenceCLM.instTopologicalSpace σ✝ F✝ 𝔖₂✝
Elapsed time : 31ms

Timestamp : 1736931654282
Testing tactic 0 || ContinuousLinearMap.topologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  TopologicalAddGroup (E →SL[σ] F)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.topologicalSpace
is not definitionally equal to the right-hand side
  AddCommGroup.toAddGroup
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
⊢ TopologicalAddGroup (E✝ →SL[σ✝] F✝) Elapsed time : 0ms

Timestamp : 1736931654286
Testing tactic 1 || ContinuousLinearMap.topologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  TopologicalAddGroup (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931654290
Testing tactic 2 || ContinuousLinearMap.topologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  TopologicalAddGroup (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931654294
Testing tactic 3 || ContinuousLinearMap.topologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  TopologicalAddGroup (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ⊢ TopologicalAddGroup (E✝ →SL[σ✝] F✝) Elapsed time : 19ms

Timestamp : 1736931654316
Testing tactic 4 || ContinuousLinearMap.topologicalAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  TopologicalAddGroup (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ⊢ TopologicalAddGroup (E✝ →SL[σ✝] F✝) Elapsed time : 18ms

Timestamp : 1736931654448
Testing tactic 0 || ContinuousLinearMap.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F],
  ContinuousSMul 𝕜₂ (E →SL[σ] F)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformSpace.toTopologicalSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.topologicalSpace
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹¹ : NormedField 𝕜₁✝
inst✝¹⁰ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁹ : AddCommGroup E✝
inst✝⁸ : Module 𝕜₁✝ E✝
inst✝⁷ : AddCommGroup F✝
inst✝⁶ : Module 𝕜₂✝ F✝
inst✝⁵ : TopologicalSpace E✝
inst✝⁴ : RingHomSurjective σ✝
inst✝³ : RingHomIsometric σ✝
inst✝² : TopologicalSpace F✝
inst✝¹ : TopologicalAddGroup F✝
inst✝ : ContinuousSMul 𝕜₂✝ F✝
⊢ ContinuousSMul 𝕜₂✝ (E✝ →SL[σ✝] F✝) Elapsed time : 1ms

Timestamp : 1736931654452
Testing tactic 1 || ContinuousLinearMap.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F],
  ContinuousSMul 𝕜₂ (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931654456
Testing tactic 2 || ContinuousLinearMap.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F],
  ContinuousSMul 𝕜₂ (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 6ms

Timestamp : 1736931654464
Testing tactic 3 || ContinuousLinearMap.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F],
  ContinuousSMul 𝕜₂ (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹¹ : NormedField 𝕜₁✝
  inst✝¹⁰ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁹ : AddCommGroup E✝
  inst✝⁸ : Module 𝕜₁✝ E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  inst✝⁵ : TopologicalSpace E✝
  inst✝⁴ : RingHomSurjective σ✝
  inst✝³ : RingHomIsometric σ✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousSMul 𝕜₂✝ F✝
  ⊢ ContinuousSMul 𝕜₂✝ (E✝ →SL[σ✝] F✝) Elapsed time : 21ms

Timestamp : 1736931654487
Testing tactic 4 || ContinuousLinearMap.continuousSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : RingHomSurjective σ] [inst_8 : RingHomIsometric σ]
  [inst_9 : TopologicalSpace F] [inst_10 : TopologicalAddGroup F] [inst_11 : ContinuousSMul 𝕜₂ F],
  ContinuousSMul 𝕜₂ (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹¹ : NormedField 𝕜₁✝
  inst✝¹⁰ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁹ : AddCommGroup E✝
  inst✝⁸ : Module 𝕜₁✝ E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  inst✝⁵ : TopologicalSpace E✝
  inst✝⁴ : RingHomSurjective σ✝
  inst✝³ : RingHomIsometric σ✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousSMul 𝕜₂✝ F✝
  ⊢ ContinuousSMul 𝕜₂✝ (E✝ →SL[σ✝] F✝) Elapsed time : 21ms

Timestamp : 1736931654615
Testing tactic 0 || ContinuousLinearMap.uniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F], UniformAddGroup (E →SL[σ] F)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.uniformSpace
is not definitionally equal to the right-hand side
  AddCommGroup.toAddGroup
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
⊢ UniformAddGroup (E✝ →SL[σ✝] F✝) Elapsed time : 1ms

Timestamp : 1736931654619
Testing tactic 1 || ContinuousLinearMap.uniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F], UniformAddGroup (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931654622
Testing tactic 2 || ContinuousLinearMap.uniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F], UniformAddGroup (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931654626
Testing tactic 3 || ContinuousLinearMap.uniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F], UniformAddGroup (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  ⊢ UniformAddGroup (E✝ →SL[σ✝] F✝) Elapsed time : 18ms

Timestamp : 1736931654647
Testing tactic 4 || ContinuousLinearMap.uniformAddGroup : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F], UniformAddGroup (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  ⊢ UniformAddGroup (E✝ →SL[σ✝] F✝) Elapsed time : 18ms

Timestamp : 1736931654716
Testing tactic 0 || ContinuousLinearMap.instContinuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E], ContinuousEvalConst (E →SL[σ] F) E F
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.topologicalSpace
is not definitionally equal to the right-hand side
  inst✝²
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁹ : NormedField 𝕜₁✝
inst✝⁸ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁷ : AddCommGroup E✝
inst✝⁶ : Module 𝕜₁✝ E✝
inst✝⁵ : AddCommGroup F✝
inst✝⁴ : Module 𝕜₂✝ F✝
inst✝³ : TopologicalSpace E✝
inst✝² : TopologicalSpace F✝
inst✝¹ : TopologicalAddGroup F✝
inst✝ : ContinuousSMul 𝕜₁✝ E✝
⊢ ContinuousEvalConst (E✝ →SL[σ✝] F✝) E✝ F✝ Elapsed time : 1ms

Timestamp : 1736931654720
Testing tactic 1 || ContinuousLinearMap.instContinuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E], ContinuousEvalConst (E →SL[σ] F) E F
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931654724
Testing tactic 2 || ContinuousLinearMap.instContinuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E], ContinuousEvalConst (E →SL[σ] F) E F
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931654729
Testing tactic 3 || ContinuousLinearMap.instContinuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E], ContinuousEvalConst (E →SL[σ] F) E F
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁹ : NormedField 𝕜₁✝
  inst✝⁸ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁷ : AddCommGroup E✝
  inst✝⁶ : Module 𝕜₁✝ E✝
  inst✝⁵ : AddCommGroup F✝
  inst✝⁴ : Module 𝕜₂✝ F✝
  inst✝³ : TopologicalSpace E✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousSMul 𝕜₁✝ E✝
  ⊢ ContinuousEvalConst (E✝ →SL[σ✝] F✝) E✝ F✝ Elapsed time : 19ms

Timestamp : 1736931654751
Testing tactic 4 || ContinuousLinearMap.instContinuousEvalConst : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E], ContinuousEvalConst (E →SL[σ] F) E F
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁹ : NormedField 𝕜₁✝
  inst✝⁸ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁷ : AddCommGroup E✝
  inst✝⁶ : Module 𝕜₁✝ E✝
  inst✝⁵ : AddCommGroup F✝
  inst✝⁴ : Module 𝕜₂✝ F✝
  inst✝³ : TopologicalSpace E✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousSMul 𝕜₁✝ E✝
  ⊢ ContinuousEvalConst (E✝ →SL[σ✝] F✝) E✝ F✝ Elapsed time : 20ms

Timestamp : 1736931654821
Testing tactic 0 || ContinuousLinearMap.instT2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E] [inst_10 : T2Space F], T2Space (E →SL[σ] F)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  E✝ →SL[σ✝] F✝
is not definitionally equal to the right-hand side
  ContinuousLinearMap.topologicalSpace
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹⁰ : NormedField 𝕜₁✝
inst✝⁹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁸ : AddCommGroup E✝
inst✝⁷ : Module 𝕜₁✝ E✝
inst✝⁶ : AddCommGroup F✝
inst✝⁵ : Module 𝕜₂✝ F✝
inst✝⁴ : TopologicalSpace E✝
inst✝³ : TopologicalSpace F✝
inst✝² : TopologicalAddGroup F✝
inst✝¹ : ContinuousSMul 𝕜₁✝ E✝
inst✝ : T2Space F✝
⊢ T2Space (E✝ →SL[σ✝] F✝) Elapsed time : 0ms

Timestamp : 1736931654825
Testing tactic 1 || ContinuousLinearMap.instT2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E] [inst_10 : T2Space F], T2Space (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 2ms

Timestamp : 1736931654829
Testing tactic 2 || ContinuousLinearMap.instT2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E] [inst_10 : T2Space F], T2Space (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931654833
Testing tactic 3 || ContinuousLinearMap.instT2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E] [inst_10 : T2Space F], T2Space (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹⁰ : NormedField 𝕜₁✝
  inst✝⁹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁸ : AddCommGroup E✝
  inst✝⁷ : Module 𝕜₁✝ E✝
  inst✝⁶ : AddCommGroup F✝
  inst✝⁵ : Module 𝕜₂✝ F✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : TopologicalSpace F✝
  inst✝² : TopologicalAddGroup F✝
  inst✝¹ : ContinuousSMul 𝕜₁✝ E✝
  inst✝ : T2Space F✝
  ⊢ T2Space (E✝ →SL[σ✝] F✝) Elapsed time : 19ms

Timestamp : 1736931654854
Testing tactic 4 || ContinuousLinearMap.instT2Space : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F]
  [inst_9 : ContinuousSMul 𝕜₁ E] [inst_10 : T2Space F], T2Space (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹⁰ : NormedField 𝕜₁✝
  inst✝⁹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁸ : AddCommGroup E✝
  inst✝⁷ : Module 𝕜₁✝ E✝
  inst✝⁶ : AddCommGroup F✝
  inst✝⁵ : Module 𝕜₂✝ F✝
  inst✝⁴ : TopologicalSpace E✝
  inst✝³ : TopologicalSpace F✝
  inst✝² : TopologicalAddGroup F✝
  inst✝¹ : ContinuousSMul 𝕜₁✝ E✝
  inst✝ : T2Space F✝
  ⊢ T2Space (E✝ →SL[σ✝] F✝) Elapsed time : 19ms

Timestamp : 1736931654984
Testing tactic 0 || ContinuousLinearMap.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    (𝓝 0).HasBasis (fun Si => Bornology.IsVonNBounded 𝕜₁ Si.1 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
tactic 'rfl' failed, the left-hand side
  fun Si => Bornology.IsVonNBounded 𝕜₁✝ Si.1 ∧ p✝ Si.2
is not definitionally equal to the right-hand side
  fun Si => {f | ∀ x ∈ Si.1, f x ∈ b✝ Si.2}
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
ι✝ : Type u_7
p✝ : ι✝ → Prop
b✝ : ι✝ → Set F✝
h✝ : (𝓝 0).HasBasis p✝ b✝
⊢ (𝓝 0).HasBasis (fun Si => Bornology.IsVonNBounded 𝕜₁✝ Si.1 ∧ p✝ Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b✝ Si.2}
Elapsed time : 1ms

Timestamp : 1736931654994
Testing tactic 1 || ContinuousLinearMap.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    (𝓝 0).HasBasis (fun Si => Bornology.IsVonNBounded 𝕜₁ Si.1 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
simp_all made no progress
Elapsed time : 60ms

Timestamp : 1736931655057
Testing tactic 2 || ContinuousLinearMap.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    (𝓝 0).HasBasis (fun Si => Bornology.IsVonNBounded 𝕜₁ Si.1 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
simp_all made no progress
Elapsed time : 59ms

Timestamp : 1736931655120
Testing tactic 3 || ContinuousLinearMap.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    (𝓝 0).HasBasis (fun Si => Bornology.IsVonNBounded 𝕜₁ Si.1 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ι✝ : Type u_7
  p✝ : ι✝ → Prop
  b✝ : ι✝ → Set F✝
  h✝ : (𝓝 0).HasBasis p✝ b✝
  ⊢ (𝓝 0).HasBasis (fun Si => Bornology.IsVonNBounded 𝕜₁✝ Si.1 ∧ p✝ Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b✝ Si.2}
Elapsed time : 83ms

Timestamp : 1736931655210
Testing tactic 4 || ContinuousLinearMap.hasBasis_nhds_zero_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    (𝓝 0).HasBasis (fun Si => Bornology.IsVonNBounded 𝕜₁ Si.1 ∧ p Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b Si.2}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ι✝ : Type u_7
  p✝ : ι✝ → Prop
  b✝ : ι✝ → Set F✝
  h✝ : (𝓝 0).HasBasis p✝ b✝
  ⊢ (𝓝 0).HasBasis (fun Si => Bornology.IsVonNBounded 𝕜₁✝ Si.1 ∧ p✝ Si.2) fun Si => {f | ∀ x ∈ Si.1, f x ∈ b✝ Si.2}
Elapsed time : 81ms

Timestamp : 1736931655366
Testing tactic 0 || ContinuousLinearMap.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  (𝓝 0).HasBasis (fun SV => Bornology.IsVonNBounded 𝕜₁ SV.1 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
tactic 'rfl' failed, the left-hand side
  fun SV => Bornology.IsVonNBounded 𝕜₁✝ SV.1 ∧ SV.2 ∈ 𝓝 0
is not definitionally equal to the right-hand side
  fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
⊢ (𝓝 0).HasBasis (fun SV => Bornology.IsVonNBounded 𝕜₁✝ SV.1 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Elapsed time : 0ms

Timestamp : 1736931655375
Testing tactic 1 || ContinuousLinearMap.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  (𝓝 0).HasBasis (fun SV => Bornology.IsVonNBounded 𝕜₁ SV.1 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
simp_all made no progress
Elapsed time : 56ms

Timestamp : 1736931655433
Testing tactic 2 || ContinuousLinearMap.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  (𝓝 0).HasBasis (fun SV => Bornology.IsVonNBounded 𝕜₁ SV.1 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
simp_all made no progress
Elapsed time : 57ms

Timestamp : 1736931655494
Testing tactic 3 || ContinuousLinearMap.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  (𝓝 0).HasBasis (fun SV => Bornology.IsVonNBounded 𝕜₁ SV.1 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ⊢ (𝓝 0).HasBasis (fun SV => Bornology.IsVonNBounded 𝕜₁✝ SV.1 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Elapsed time : 80ms

Timestamp : 1736931655580
Testing tactic 4 || ContinuousLinearMap.hasBasis_nhds_zero : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  (𝓝 0).HasBasis (fun SV => Bornology.IsVonNBounded 𝕜₁ SV.1 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ⊢ (𝓝 0).HasBasis (fun SV => Bornology.IsVonNBounded 𝕜₁✝ SV.1 ∧ SV.2 ∈ 𝓝 0) fun SV => {f | ∀ x ∈ SV.1, f x ∈ SV.2}
Elapsed time : 81ms

Timestamp : 1736931655726
Testing tactic 0 || ContinuousLinearMap.isUniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformOnFun.uniformSpace E✝ F✝ {s | Bornology.IsVonNBounded 𝕜₁✝ s}
is not definitionally equal to the right-hand side
  fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁✝ s}) ⇑f
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
⊢ IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁✝ s}) ⇑f Elapsed time : 1ms

Timestamp : 1736931655733
Testing tactic 1 || ContinuousLinearMap.isUniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.exception ::
simp_all made no progress
Elapsed time : 5ms

Timestamp : 1736931655740
Testing tactic 2 || ContinuousLinearMap.isUniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.exception ::
simp_all made no progress
Elapsed time : 5ms

Timestamp : 1736931655748
Testing tactic 3 || ContinuousLinearMap.isUniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  ⊢ IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁✝ s}) ⇑f Elapsed time : 27ms

Timestamp : 1736931655780
Testing tactic 4 || ContinuousLinearMap.isUniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  ⊢ IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁✝ s}) ⇑f Elapsed time : 28ms

Timestamp : 1736931655816
Testing tactic 0 || ContinuousLinearMap.uniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.exception ::
tactic 'rfl' failed, the left-hand side
  UniformOnFun.uniformSpace E✝ F✝ {s | Bornology.IsVonNBounded 𝕜₁✝ s}
is not definitionally equal to the right-hand side
  fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁✝ s}) ⇑f
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : UniformSpace F✝
inst✝ : UniformAddGroup F✝
⊢ IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁✝ s}) ⇑f Elapsed time : 0ms

Timestamp : 1736931655823
Testing tactic 1 || ContinuousLinearMap.uniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.exception ::
simp_all made no progress
Elapsed time : 5ms

Timestamp : 1736931655829
Testing tactic 2 || ContinuousLinearMap.uniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.success
Elapsed time : 8ms

Timestamp : 1736931655840
Testing tactic 3 || ContinuousLinearMap.uniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : UniformSpace F✝
  inst✝ : UniformAddGroup F✝
  ⊢ IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁✝ s}) ⇑f Elapsed time : 26ms

Timestamp : 1736931655871
Testing tactic 4 || ContinuousLinearMap.uniformEmbedding_toUniformOnFun : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F],
  IsUniformEmbedding fun f => (UniformOnFun.ofFun {s | Bornology.IsVonNBounded 𝕜₁ s}) ⇑f
Result.success
Elapsed time : 29ms

Timestamp : 1736931655973
Testing tactic 0 || ContinuousLinearMap.uniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F], UniformContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.uniformSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.instSMul
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹² : NormedField 𝕜₁✝
inst✝¹¹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝¹⁰ : AddCommGroup E✝
inst✝⁹ : Module 𝕜₁✝ E✝
inst✝⁸ : AddCommGroup F✝
inst✝⁷ : Module 𝕜₂✝ F✝
inst✝⁶ : TopologicalSpace E✝
M✝ : Type u_7
inst✝⁵ : Monoid M✝
inst✝⁴ : DistribMulAction M✝ F✝
inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
inst✝² : UniformSpace F✝
inst✝¹ : UniformAddGroup F✝
inst✝ : UniformContinuousConstSMul M✝ F✝
⊢ UniformContinuousConstSMul M✝ (E✝ →SL[σ✝] F✝) Elapsed time : 1ms

Timestamp : 1736931655977
Testing tactic 1 || ContinuousLinearMap.uniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F], UniformContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 1ms

Timestamp : 1736931655981
Testing tactic 2 || ContinuousLinearMap.uniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F], UniformContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931655986
Testing tactic 3 || ContinuousLinearMap.uniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F], UniformContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : AddCommGroup F✝
  inst✝⁷ : Module 𝕜₂✝ F✝
  inst✝⁶ : TopologicalSpace E✝
  M✝ : Type u_7
  inst✝⁵ : Monoid M✝
  inst✝⁴ : DistribMulAction M✝ F✝
  inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
  inst✝² : UniformSpace F✝
  inst✝¹ : UniformAddGroup F✝
  inst✝ : UniformContinuousConstSMul M✝ F✝
  ⊢ UniformContinuousConstSMul M✝ (E✝ →SL[σ✝] F✝) Elapsed time : 20ms

Timestamp : 1736931656010
Testing tactic 4 || ContinuousLinearMap.uniformContinuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F]
  [inst_12 : UniformContinuousConstSMul M F], UniformContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : AddCommGroup F✝
  inst✝⁷ : Module 𝕜₂✝ F✝
  inst✝⁶ : TopologicalSpace E✝
  M✝ : Type u_7
  inst✝⁵ : Monoid M✝
  inst✝⁴ : DistribMulAction M✝ F✝
  inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
  inst✝² : UniformSpace F✝
  inst✝¹ : UniformAddGroup F✝
  inst✝ : UniformContinuousConstSMul M✝ F✝
  ⊢ UniformContinuousConstSMul M✝ (E✝ →SL[σ✝] F✝) Elapsed time : 21ms

Timestamp : 1736931656100
Testing tactic 0 || ContinuousLinearMap.continuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F], ContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.topologicalSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.instSMul
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹² : NormedField 𝕜₁✝
inst✝¹¹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝¹⁰ : AddCommGroup E✝
inst✝⁹ : Module 𝕜₁✝ E✝
inst✝⁸ : AddCommGroup F✝
inst✝⁷ : Module 𝕜₂✝ F✝
inst✝⁶ : TopologicalSpace E✝
M✝ : Type u_7
inst✝⁵ : Monoid M✝
inst✝⁴ : DistribMulAction M✝ F✝
inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
inst✝² : TopologicalSpace F✝
inst✝¹ : TopologicalAddGroup F✝
inst✝ : ContinuousConstSMul M✝ F✝
⊢ ContinuousConstSMul M✝ (E✝ →SL[σ✝] F✝) Elapsed time : 1ms

Timestamp : 1736931656104
Testing tactic 1 || ContinuousLinearMap.continuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F], ContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 1ms

Timestamp : 1736931656108
Testing tactic 2 || ContinuousLinearMap.continuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F], ContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931656113
Testing tactic 3 || ContinuousLinearMap.continuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F], ContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : AddCommGroup F✝
  inst✝⁷ : Module 𝕜₂✝ F✝
  inst✝⁶ : TopologicalSpace E✝
  M✝ : Type u_7
  inst✝⁵ : Monoid M✝
  inst✝⁴ : DistribMulAction M✝ F✝
  inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousConstSMul M✝ F✝
  ⊢ ContinuousConstSMul M✝ (E✝ →SL[σ✝] F✝) Elapsed time : 19ms

Timestamp : 1736931656135
Testing tactic 4 || ContinuousLinearMap.continuousConstSMul : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {M : Type u_7} [inst_7 : Monoid M] [inst_8 : DistribMulAction M F]
  [inst_9 : SMulCommClass 𝕜₂ M F] [inst_10 : TopologicalSpace F] [inst_11 : TopologicalAddGroup F]
  [inst_12 : ContinuousConstSMul M F], ContinuousConstSMul M (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : AddCommGroup F✝
  inst✝⁷ : Module 𝕜₂✝ F✝
  inst✝⁶ : TopologicalSpace E✝
  M✝ : Type u_7
  inst✝⁵ : Monoid M✝
  inst✝⁴ : DistribMulAction M✝ F✝
  inst✝³ : SMulCommClass 𝕜₂✝ M✝ F✝
  inst✝² : TopologicalSpace F✝
  inst✝¹ : TopologicalAddGroup F✝
  inst✝ : ContinuousConstSMul M✝ F✝
  ⊢ ContinuousConstSMul M✝ (E✝ →SL[σ✝] F✝) Elapsed time : 19ms

Timestamp : 1736931656228
Testing tactic 0 || ContinuousLinearMap.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
tactic 'rfl' failed, the left-hand side
  𝓝 0
is not definitionally equal to the right-hand side
  ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁✝ s), ⨅ i, ⨅ (_ : p✝ i), 𝓟 {f | Set.MapsTo (⇑f) s (b✝ i)}
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
ι✝ : Type u_7
p✝ : ι✝ → Prop
b✝ : ι✝ → Set F✝
h✝ : (𝓝 0).HasBasis p✝ b✝
⊢ 𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁✝ s), ⨅ i, ⨅ (_ : p✝ i), 𝓟 {f | Set.MapsTo (⇑f) s (b✝ i)}
Elapsed time : 1ms

Timestamp : 1736931656242
Testing tactic 1 || ContinuousLinearMap.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
simp_all made no progress
Elapsed time : 66ms

Timestamp : 1736931656314
Testing tactic 2 || ContinuousLinearMap.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
simp_all made no progress
Elapsed time : 66ms

Timestamp : 1736931656384
Testing tactic 3 || ContinuousLinearMap.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ι✝ : Type u_7
  p✝ : ι✝ → Prop
  b✝ : ι✝ → Set F✝
  h✝ : (𝓝 0).HasBasis p✝ b✝
  ⊢ 𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁✝ s), ⨅ i, ⨅ (_ : p✝ i), 𝓟 {f | Set.MapsTo (⇑f) s (b✝ i)}
Elapsed time : 242ms

Timestamp : 1736931656637
Testing tactic 4 || ContinuousLinearMap.nhds_zero_eq_of_basis : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {ι : Type u_7}
  {p : ι → Prop} {b : ι → Set F},
  (𝓝 0).HasBasis p b →
    𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ i, ⨅ (_ : p i), 𝓟 {f | Set.MapsTo (⇑f) s (b i)}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ι✝ : Type u_7
  p✝ : ι✝ → Prop
  b✝ : ι✝ → Set F✝
  h✝ : (𝓝 0).HasBasis p✝ b✝
  ⊢ 𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁✝ s), ⨅ i, ⨅ (_ : p✝ i), 𝓟 {f | Set.MapsTo (⇑f) s (b✝ i)}
Elapsed time : 256ms

Timestamp : 1736931656981
Testing tactic 0 || ContinuousLinearMap.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U}
Result.exception ::
tactic 'rfl' failed, the left-hand side
  𝓝 0
is not definitionally equal to the right-hand side
  ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁✝ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U}
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
⊢ 𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁✝ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U} Elapsed time : 1ms

Timestamp : 1736931656994
Testing tactic 1 || ContinuousLinearMap.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U}
Result.exception ::
simp_all made no progress
Elapsed time : 78ms

Timestamp : 1736931657077
Testing tactic 2 || ContinuousLinearMap.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U}
Result.exception ::
simp_all made no progress
Elapsed time : 77ms

Timestamp : 1736931657160
Testing tactic 3 || ContinuousLinearMap.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ⊢ 𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁✝ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U} Elapsed time : 275ms

Timestamp : 1736931657446
Testing tactic 4 || ContinuousLinearMap.nhds_zero_eq : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F],
  𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U}
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  ⊢ 𝓝 0 = ⨅ s, ⨅ (_ : Bornology.IsVonNBounded 𝕜₁✝ s), ⨅ U ∈ 𝓝 0, 𝓟 {f | Set.MapsTo (⇑f) s U} Elapsed time : 270ms

Timestamp : 1736931657796
Testing tactic 0 || ContinuousLinearMap.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {s : Set E},
  Bornology.IsVonNBounded 𝕜₁ s → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : E →SL[σ] F) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
tactic 'rfl' failed, the left-hand side
  fun f => Set.MapsTo (⇑f) s✝ U✝
is not definitionally equal to the right-hand side
  𝓝 0
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝⁸ : NormedField 𝕜₁✝
inst✝⁷ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁶ : AddCommGroup E✝
inst✝⁵ : Module 𝕜₁✝ E✝
inst✝⁴ : AddCommGroup F✝
inst✝³ : Module 𝕜₂✝ F✝
inst✝² : TopologicalSpace E✝
inst✝¹ : TopologicalSpace F✝
inst✝ : TopologicalAddGroup F✝
s✝ : Set E✝
hs✝ : Bornology.IsVonNBounded 𝕜₁✝ s✝
U✝ : Set F✝
hu✝ : U✝ ∈ 𝓝 0
⊢ ∀ᶠ (f : E✝ →SL[σ✝] F✝) in 𝓝 0, Set.MapsTo (⇑f) s✝ U✝ Elapsed time : 1ms

Timestamp : 1736931657804
Testing tactic 1 || ContinuousLinearMap.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {s : Set E},
  Bornology.IsVonNBounded 𝕜₁ s → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : E →SL[σ] F) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
simp_all made no progress
Elapsed time : 47ms

Timestamp : 1736931657855
Testing tactic 2 || ContinuousLinearMap.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {s : Set E},
  Bornology.IsVonNBounded 𝕜₁ s → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : E →SL[σ] F) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
simp_all made no progress
Elapsed time : 49ms

Timestamp : 1736931657909
Testing tactic 3 || ContinuousLinearMap.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {s : Set E},
  Bornology.IsVonNBounded 𝕜₁ s → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : E →SL[σ] F) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  s✝ : Set E✝
  hs✝ : Bornology.IsVonNBounded 𝕜₁✝ s✝
  U✝ : Set F✝
  hu✝ : U✝ ∈ 𝓝 0
  ⊢ ∀ᶠ (f : E✝ →SL[σ✝] F✝) in 𝓝 0, Set.MapsTo (⇑f) s✝ U✝ Elapsed time : 75ms

Timestamp : 1736931657992
Testing tactic 4 || ContinuousLinearMap.eventually_nhds_zero_mapsTo : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalSpace F] [inst_8 : TopologicalAddGroup F] {s : Set E},
  Bornology.IsVonNBounded 𝕜₁ s → ∀ {U : Set F}, U ∈ 𝓝 0 → ∀ᶠ (f : E →SL[σ] F) in 𝓝 0, Set.MapsTo (⇑f) s U
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝⁸ : NormedField 𝕜₁✝
  inst✝⁷ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁶ : AddCommGroup E✝
  inst✝⁵ : Module 𝕜₁✝ E✝
  inst✝⁴ : AddCommGroup F✝
  inst✝³ : Module 𝕜₂✝ F✝
  inst✝² : TopologicalSpace E✝
  inst✝¹ : TopologicalSpace F✝
  inst✝ : TopologicalAddGroup F✝
  s✝ : Set E✝
  hs✝ : Bornology.IsVonNBounded 𝕜₁✝ s✝
  U✝ : Set F✝
  hu✝ : U✝ ∈ 𝓝 0
  ⊢ ∀ᶠ (f : E✝ →SL[σ✝] F✝) in 𝓝 0, Set.MapsTo (⇑f) s✝ U✝ Elapsed time : 77ms

Timestamp : 1736931658177
Testing tactic 0 || ContinuousLinearMap.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : SeminormedRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S →
    ∀ {s : Set E}, Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  inst✝⁴
is not definitionally equal to the right-hand side
  Set.image2 (fun f x => f x) S✝ s✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹² : NormedField 𝕜₁✝
inst✝¹¹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝¹⁰ : AddCommGroup E✝
inst✝⁹ : Module 𝕜₁✝ E✝
inst✝⁸ : AddCommGroup F✝
inst✝⁷ : Module 𝕜₂✝ F✝
inst✝⁶ : TopologicalSpace E✝
R✝ : Type u_7
inst✝⁵ : SeminormedRing R✝
inst✝⁴ : TopologicalSpace F✝
inst✝³ : TopologicalAddGroup F✝
inst✝² : Module R✝ F✝
inst✝¹ : ContinuousConstSMul R✝ F✝
inst✝ : SMulCommClass 𝕜₂✝ R✝ F✝
S✝ : Set (E✝ →SL[σ✝] F✝)
hS✝ : Bornology.IsVonNBounded R✝ S✝
s✝ : Set E✝
hs✝ : Bornology.IsVonNBounded 𝕜₁✝ s✝
⊢ Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s✝) Elapsed time : 1ms

Timestamp : 1736931658183
Testing tactic 1 || ContinuousLinearMap.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : SeminormedRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S →
    ∀ {s : Set E}, Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
simp_all made no progress
Elapsed time : 7ms

Timestamp : 1736931658193
Testing tactic 2 || ContinuousLinearMap.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : SeminormedRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S →
    ∀ {s : Set E}, Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
simp_all made no progress
Elapsed time : 11ms

Timestamp : 1736931658206
Testing tactic 3 || ContinuousLinearMap.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : SeminormedRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S →
    ∀ {s : Set E}, Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : AddCommGroup F✝
  inst✝⁷ : Module 𝕜₂✝ F✝
  inst✝⁶ : TopologicalSpace E✝
  R✝ : Type u_7
  inst✝⁵ : SeminormedRing R✝
  inst✝⁴ : TopologicalSpace F✝
  inst✝³ : TopologicalAddGroup F✝
  inst✝² : Module R✝ F✝
  inst✝¹ : ContinuousConstSMul R✝ F✝
  inst✝ : SMulCommClass 𝕜₂✝ R✝ F✝
  S✝ : Set (E✝ →SL[σ✝] F✝)
  hS✝ : Bornology.IsVonNBounded R✝ S✝
  s✝ : Set E✝
  hs✝ : Bornology.IsVonNBounded 𝕜₁✝ s✝
  ⊢ Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s✝) Elapsed time : 38ms

Timestamp : 1736931658250
Testing tactic 4 || ContinuousLinearMap.isVonNBounded_image2_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : SeminormedRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S →
    ∀ {s : Set E}, Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹² : NormedField 𝕜₁✝
  inst✝¹¹ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝¹⁰ : AddCommGroup E✝
  inst✝⁹ : Module 𝕜₁✝ E✝
  inst✝⁸ : AddCommGroup F✝
  inst✝⁷ : Module 𝕜₂✝ F✝
  inst✝⁶ : TopologicalSpace E✝
  R✝ : Type u_7
  inst✝⁵ : SeminormedRing R✝
  inst✝⁴ : TopologicalSpace F✝
  inst✝³ : TopologicalAddGroup F✝
  inst✝² : Module R✝ F✝
  inst✝¹ : ContinuousConstSMul R✝ F✝
  inst✝ : SMulCommClass 𝕜₂✝ R✝ F✝
  S✝ : Set (E✝ →SL[σ✝] F✝)
  hS✝ : Bornology.IsVonNBounded R✝ S✝
  s✝ : Set E✝
  hs✝ : Bornology.IsVonNBounded 𝕜₁✝ s✝
  ⊢ Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s✝) Elapsed time : 39ms

Timestamp : 1736931658390
Testing tactic 0 || ContinuousLinearMap.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : NormedDivisionRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S ↔
    ∀ (s : Set E), Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  Bornology.IsVonNBounded R✝ S✝
is not definitionally equal to the right-hand side
  ∀ (s : Set E✝), Bornology.IsVonNBounded 𝕜₁✝ s → Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s)
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹² : NormedField 𝕜₁✝
inst✝¹¹ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝¹⁰ : AddCommGroup E✝
inst✝⁹ : Module 𝕜₁✝ E✝
inst✝⁸ : AddCommGroup F✝
inst✝⁷ : Module 𝕜₂✝ F✝
inst✝⁶ : TopologicalSpace E✝
R✝ : Type u_7
inst✝⁵ : NormedDivisionRing R✝
inst✝⁴ : TopologicalSpace F✝
inst✝³ : TopologicalAddGroup F✝
inst✝² : Module R✝ F✝
inst✝¹ : ContinuousConstSMul R✝ F✝
inst✝ : SMulCommClass 𝕜₂✝ R✝ F✝
S✝ : Set (E✝ →SL[σ✝] F✝)
⊢ Bornology.IsVonNBounded R✝ S✝ ↔
    ∀ (s : Set E✝), Bornology.IsVonNBounded 𝕜₁✝ s → Bornology.IsVonNBounded R✝ (Set.image2 (fun f x => f x) S✝ s)
Elapsed time : 0ms

Timestamp : 1736931658397
Testing tactic 1 || ContinuousLinearMap.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : NormedDivisionRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S ↔
    ∀ (s : Set E), Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
simp_all made no progress
Elapsed time : 10ms

Timestamp : 1736931658411
Testing tactic 2 || ContinuousLinearMap.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : NormedDivisionRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S ↔
    ∀ (s : Set E), Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.exception ::
simp_all made no progress
Elapsed time : 13ms

Timestamp : 1736931658427
Testing tactic 3 || ContinuousLinearMap.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : NormedDivisionRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S ↔
    ∀ (s : Set E), Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.subGoals
Elapsed time : 95ms

Timestamp : 1736931658526
Testing tactic 4 || ContinuousLinearMap.isVonNBounded_iff : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] {R : Type u_7} [inst_7 : NormedDivisionRing R] [inst_8 : TopologicalSpace F]
  [inst_9 : TopologicalAddGroup F] [inst_10 : Module R F] [inst_11 : ContinuousConstSMul R F]
  [inst_12 : SMulCommClass 𝕜₂ R F] {S : Set (E →SL[σ] F)},
  Bornology.IsVonNBounded R S ↔
    ∀ (s : Set E), Bornology.IsVonNBounded 𝕜₁ s → Bornology.IsVonNBounded R (Set.image2 (fun f x => f x) S s)
Result.subGoals
Elapsed time : 95ms

Timestamp : 1736931658688
Testing tactic 0 || ContinuousLinearMap.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F] [inst_9 : ContinuousSMul 𝕜₂ F]
  [inst_10 : CompleteSpace F] [inst_11 : ContinuousSMul 𝕜₁ E],
  Topology.RestrictGenTopology {s | Bornology.IsVonNBounded 𝕜₁ s} → CompleteSpace (E →SL[σ] F)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  E✝ →SL[σ✝] F✝
is not definitionally equal to the right-hand side
  ContinuousLinearMap.uniformSpace
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹¹ : NormedField 𝕜₁✝
inst✝¹⁰ : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝⁹ : AddCommGroup E✝
inst✝⁸ : Module 𝕜₁✝ E✝
inst✝⁷ : AddCommGroup F✝
inst✝⁶ : Module 𝕜₂✝ F✝
inst✝⁵ : TopologicalSpace E✝
inst✝⁴ : UniformSpace F✝
inst✝³ : UniformAddGroup F✝
inst✝² : ContinuousSMul 𝕜₂✝ F✝
inst✝¹ : CompleteSpace F✝
inst✝ : ContinuousSMul 𝕜₁✝ E✝
h✝ : Topology.RestrictGenTopology {s | Bornology.IsVonNBounded 𝕜₁✝ s}
⊢ CompleteSpace (E✝ →SL[σ✝] F✝) Elapsed time : 0ms

Timestamp : 1736931658694
Testing tactic 1 || ContinuousLinearMap.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F] [inst_9 : ContinuousSMul 𝕜₂ F]
  [inst_10 : CompleteSpace F] [inst_11 : ContinuousSMul 𝕜₁ E],
  Topology.RestrictGenTopology {s | Bornology.IsVonNBounded 𝕜₁ s} → CompleteSpace (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 5ms

Timestamp : 1736931658701
Testing tactic 2 || ContinuousLinearMap.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F] [inst_9 : ContinuousSMul 𝕜₂ F]
  [inst_10 : CompleteSpace F] [inst_11 : ContinuousSMul 𝕜₁ E],
  Topology.RestrictGenTopology {s | Bornology.IsVonNBounded 𝕜₁ s} → CompleteSpace (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 6ms

Timestamp : 1736931658709
Testing tactic 3 || ContinuousLinearMap.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F] [inst_9 : ContinuousSMul 𝕜₂ F]
  [inst_10 : CompleteSpace F] [inst_11 : ContinuousSMul 𝕜₁ E],
  Topology.RestrictGenTopology {s | Bornology.IsVonNBounded 𝕜₁ s} → CompleteSpace (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹¹ : NormedField 𝕜₁✝
  inst✝¹⁰ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁹ : AddCommGroup E✝
  inst✝⁸ : Module 𝕜₁✝ E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  inst✝⁵ : TopologicalSpace E✝
  inst✝⁴ : UniformSpace F✝
  inst✝³ : UniformAddGroup F✝
  inst✝² : ContinuousSMul 𝕜₂✝ F✝
  inst✝¹ : CompleteSpace F✝
  inst✝ : ContinuousSMul 𝕜₁✝ E✝
  h✝ : Topology.RestrictGenTopology {s | Bornology.IsVonNBounded 𝕜₁✝ s}
  ⊢ CompleteSpace (E✝ →SL[σ✝] F✝) Elapsed time : 26ms

Timestamp : 1736931658741
Testing tactic 4 || ContinuousLinearMap.completeSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : UniformSpace F] [inst_8 : UniformAddGroup F] [inst_9 : ContinuousSMul 𝕜₂ F]
  [inst_10 : CompleteSpace F] [inst_11 : ContinuousSMul 𝕜₁ E],
  Topology.RestrictGenTopology {s | Bornology.IsVonNBounded 𝕜₁ s} → CompleteSpace (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹¹ : NormedField 𝕜₁✝
  inst✝¹⁰ : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝⁹ : AddCommGroup E✝
  inst✝⁸ : Module 𝕜₁✝ E✝
  inst✝⁷ : AddCommGroup F✝
  inst✝⁶ : Module 𝕜₂✝ F✝
  inst✝⁵ : TopologicalSpace E✝
  inst✝⁴ : UniformSpace F✝
  inst✝³ : UniformAddGroup F✝
  inst✝² : ContinuousSMul 𝕜₂✝ F✝
  inst✝¹ : CompleteSpace F✝
  inst✝ : ContinuousSMul 𝕜₁✝ E✝
  h✝ : Topology.RestrictGenTopology {s | Bornology.IsVonNBounded 𝕜₁✝ s}
  ⊢ CompleteSpace (E✝ →SL[σ✝] F✝) Elapsed time : 29ms

Timestamp : 1736931658834
Testing tactic 0 || ContinuousLinearMap.instCompleteSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalAddGroup E] [inst_8 : ContinuousSMul 𝕜₁ E]
  [inst_9 : SequentialSpace E] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F] [inst_12 : ContinuousSMul 𝕜₂ F]
  [inst_13 : CompleteSpace F], CompleteSpace (E →SL[σ] F)
Result.exception ::
tactic 'rfl' failed, the left-hand side
  E✝ →SL[σ✝] F✝
is not definitionally equal to the right-hand side
  ContinuousLinearMap.uniformSpace
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
inst✝¹³ : NormedField 𝕜₁✝
inst✝¹² : NormedField 𝕜₂✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
E✝ : Type u_4
F✝ : Type u_5
inst✝¹¹ : AddCommGroup E✝
inst✝¹⁰ : Module 𝕜₁✝ E✝
inst✝⁹ : AddCommGroup F✝
inst✝⁸ : Module 𝕜₂✝ F✝
inst✝⁷ : TopologicalSpace E✝
inst✝⁶ : TopologicalAddGroup E✝
inst✝⁵ : ContinuousSMul 𝕜₁✝ E✝
inst✝⁴ : SequentialSpace E✝
inst✝³ : UniformSpace F✝
inst✝² : UniformAddGroup F✝
inst✝¹ : ContinuousSMul 𝕜₂✝ F✝
inst✝ : CompleteSpace F✝
⊢ CompleteSpace (E✝ →SL[σ✝] F✝) Elapsed time : 1ms

Timestamp : 1736931658838
Testing tactic 1 || ContinuousLinearMap.instCompleteSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalAddGroup E] [inst_8 : ContinuousSMul 𝕜₁ E]
  [inst_9 : SequentialSpace E] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F] [inst_12 : ContinuousSMul 𝕜₂ F]
  [inst_13 : CompleteSpace F], CompleteSpace (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 3ms

Timestamp : 1736931658844
Testing tactic 2 || ContinuousLinearMap.instCompleteSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalAddGroup E] [inst_8 : ContinuousSMul 𝕜₁ E]
  [inst_9 : SequentialSpace E] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F] [inst_12 : ContinuousSMul 𝕜₂ F]
  [inst_13 : CompleteSpace F], CompleteSpace (E →SL[σ] F)
Result.exception ::
simp_all made no progress
Elapsed time : 58ms

Timestamp : 1736931658904
Testing tactic 3 || ContinuousLinearMap.instCompleteSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalAddGroup E] [inst_8 : ContinuousSMul 𝕜₁ E]
  [inst_9 : SequentialSpace E] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F] [inst_12 : ContinuousSMul 𝕜₂ F]
  [inst_13 : CompleteSpace F], CompleteSpace (E →SL[σ] F)
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜₁✝ : Type u_1
  𝕜₂✝ : Type u_2
  inst✝¹³ : NormedField 𝕜₁✝
  inst✝¹² : NormedField 𝕜₂✝
  σ✝ : 𝕜₁✝ →+* 𝕜₂✝
  E✝ : Type u_4
  F✝ : Type u_5
  inst✝¹¹ : AddCommGroup E✝
  inst✝¹⁰ : Module 𝕜₁✝ E✝
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : Module 𝕜₂✝ F✝
  inst✝⁷ : TopologicalSpace E✝
  inst✝⁶ : TopologicalAddGroup E✝
  inst✝⁵ : ContinuousSMul 𝕜₁✝ E✝
  inst✝⁴ : SequentialSpace E✝
  inst✝³ : UniformSpace F✝
  inst✝² : UniformAddGroup F✝
  inst✝¹ : ContinuousSMul 𝕜₂✝ F✝
  inst✝ : CompleteSpace F✝
  ⊢ CompleteSpace (E✝ →SL[σ✝] F✝) Elapsed time : 24ms

Timestamp : 1736931658932
Testing tactic 4 || ContinuousLinearMap.instCompleteSpace : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E : Type u_4}
  {F : Type u_5} [inst_2 : AddCommGroup E] [inst_3 : Module 𝕜₁ E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜₂ F]
  [inst_6 : TopologicalSpace E] [inst_7 : TopologicalAddGroup E] [inst_8 : ContinuousSMul 𝕜₁ E]
  [inst_9 : SequentialSpace E] [inst_10 : UniformSpace F] [inst_11 : UniformAddGroup F] [inst_12 : ContinuousSMul 𝕜₂ F]
  [inst_13 : CompleteSpace F], CompleteSpace (E →SL[σ] F)
Result.success
Elapsed time : 120ms

Timestamp : 1736931659339
Testing tactic 0 || ContinuousLinearMap.precomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  {E : Type u_4} {F : Type u_5} (G : Type u_6) [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup G] [inst_14 : ContinuousConstSMul 𝕜₃ G] [inst_15 : RingHomSurjective σ]
  [inst_16 : RingHomIsometric σ] (L : E →SL[σ] F) (f : F →SL[τ] G),
  (@ContinuousLinearMap.precomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8 inst_9
        inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    f.comp L
Result.exception ::
tactic 'rfl' failed, the left-hand side
  (@ContinuousLinearMap.precomp 𝕜₁✝ 𝕜₂✝ 𝕜₃✝ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ σ✝ τ✝ ρ✝ inst✝¹³ E✝ F✝ G✝ inst✝¹² inst✝¹¹ inst✝¹⁰
      inst✝⁹ inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴ inst✝³ inst✝² inst✝¹ inst✝ L✝)
    f✝
is not definitionally equal to the right-hand side
  f✝.comp L✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
𝕜₃✝ : Type u_3
inst✝¹⁶ : NormedField 𝕜₁✝
inst✝¹⁵ : NormedField 𝕜₂✝
inst✝¹⁴ : NormedField 𝕜₃✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
τ✝ : 𝕜₂✝ →+* 𝕜₃✝
ρ✝ : 𝕜₁✝ →+* 𝕜₃✝
inst✝¹³ : RingHomCompTriple σ✝ τ✝ ρ✝
E✝ : Type u_4
F✝ : Type u_5
G✝ : Type u_6
inst✝¹² : AddCommGroup E✝
inst✝¹¹ : Module 𝕜₁✝ E✝
inst✝¹⁰ : AddCommGroup F✝
inst✝⁹ : Module 𝕜₂✝ F✝
inst✝⁸ : AddCommGroup G✝
inst✝⁷ : Module 𝕜₃✝ G✝
inst✝⁶ : TopologicalSpace E✝
inst✝⁵ : TopologicalSpace F✝
inst✝⁴ : TopologicalSpace G✝
inst✝³ : TopologicalAddGroup G✝
inst✝² : ContinuousConstSMul 𝕜₃✝ G✝
inst✝¹ : RingHomSurjective σ✝
inst✝ : RingHomIsometric σ✝
L✝ : E✝ →SL[σ✝] F✝
f✝ : F✝ →SL[τ✝] G✝
⊢ (@ContinuousLinearMap.precomp 𝕜₁✝ 𝕜₂✝ 𝕜₃✝ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ σ✝ τ✝ ρ✝ inst✝¹³ E✝ F✝ G✝ inst✝¹² inst✝¹¹ inst✝¹⁰
        inst✝⁹ inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴ inst✝³ inst✝² inst✝¹ inst✝ L✝)
      f✝ =
    f✝.comp L✝
Elapsed time : 1ms

Timestamp : 1736931659348
Testing tactic 1 || ContinuousLinearMap.precomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  {E : Type u_4} {F : Type u_5} (G : Type u_6) [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup G] [inst_14 : ContinuousConstSMul 𝕜₃ G] [inst_15 : RingHomSurjective σ]
  [inst_16 : RingHomIsometric σ] (L : E →SL[σ] F) (f : F →SL[τ] G),
  (@ContinuousLinearMap.precomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8 inst_9
        inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    f.comp L
Result.exception ::
unknown constant 'ContinuousLinearMap.precomp'
Elapsed time : 3ms

Timestamp : 1736931659356
Testing tactic 2 || ContinuousLinearMap.precomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  {E : Type u_4} {F : Type u_5} (G : Type u_6) [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup G] [inst_14 : ContinuousConstSMul 𝕜₃ G] [inst_15 : RingHomSurjective σ]
  [inst_16 : RingHomIsometric σ] (L : E →SL[σ] F) (f : F →SL[τ] G),
  (@ContinuousLinearMap.precomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8 inst_9
        inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    f.comp L
Result.exception ::
unknown constant 'ContinuousLinearMap.precomp'
Elapsed time : 4ms

Timestamp : 1736931659364
Testing tactic 3 || ContinuousLinearMap.precomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  {E : Type u_4} {F : Type u_5} (G : Type u_6) [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup G] [inst_14 : ContinuousConstSMul 𝕜₃ G] [inst_15 : RingHomSurjective σ]
  [inst_16 : RingHomIsometric σ] (L : E →SL[σ] F) (f : F →SL[τ] G),
  (@ContinuousLinearMap.precomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8 inst_9
        inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    f.comp L
Result.exception ::
aesop: error in norm unfold: unknown constant 'ContinuousLinearMap.precomp'
Elapsed time : 12ms

Timestamp : 1736931659379
Testing tactic 4 || ContinuousLinearMap.precomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  {E : Type u_4} {F : Type u_5} (G : Type u_6) [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup G] [inst_14 : ContinuousConstSMul 𝕜₃ G] [inst_15 : RingHomSurjective σ]
  [inst_16 : RingHomIsometric σ] (L : E →SL[σ] F) (f : F →SL[τ] G),
  (@ContinuousLinearMap.precomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8 inst_9
        inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    f.comp L
Result.exception ::
aesop: error in norm unfold: unknown constant 'ContinuousLinearMap.precomp'
Elapsed time : 11ms

Timestamp : 1736931659680
Testing tactic 0 || ContinuousLinearMap.postcomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  (E : Type u_4) {F : Type u_5} {G : Type u_6} [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup F] [inst_14 : TopologicalAddGroup G] [inst_15 : ContinuousConstSMul 𝕜₃ G]
  [inst_16 : ContinuousConstSMul 𝕜₂ F] (L : F →SL[τ] G) (f : E →SL[σ] F),
  (@ContinuousLinearMap.postcomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8
        inst_9 inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    L.comp f
Result.exception ::
tactic 'rfl' failed, the left-hand side
  (@ContinuousLinearMap.postcomp 𝕜₁✝ 𝕜₂✝ 𝕜₃✝ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ σ✝ τ✝ ρ✝ inst✝¹³ E✝ F✝ G✝ inst✝¹² inst✝¹¹ inst✝¹⁰
      inst✝⁹ inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴ inst✝³ inst✝² inst✝¹ inst✝ L✝)
    f✝
is not definitionally equal to the right-hand side
  L✝.comp f✝
𝕜₁✝ : Type u_1
𝕜₂✝ : Type u_2
𝕜₃✝ : Type u_3
inst✝¹⁶ : NormedField 𝕜₁✝
inst✝¹⁵ : NormedField 𝕜₂✝
inst✝¹⁴ : NormedField 𝕜₃✝
σ✝ : 𝕜₁✝ →+* 𝕜₂✝
τ✝ : 𝕜₂✝ →+* 𝕜₃✝
ρ✝ : 𝕜₁✝ →+* 𝕜₃✝
inst✝¹³ : RingHomCompTriple σ✝ τ✝ ρ✝
E✝ : Type u_4
F✝ : Type u_5
G✝ : Type u_6
inst✝¹² : AddCommGroup E✝
inst✝¹¹ : Module 𝕜₁✝ E✝
inst✝¹⁰ : AddCommGroup F✝
inst✝⁹ : Module 𝕜₂✝ F✝
inst✝⁸ : AddCommGroup G✝
inst✝⁷ : Module 𝕜₃✝ G✝
inst✝⁶ : TopologicalSpace E✝
inst✝⁵ : TopologicalSpace F✝
inst✝⁴ : TopologicalSpace G✝
inst✝³ : TopologicalAddGroup F✝
inst✝² : TopologicalAddGroup G✝
inst✝¹ : ContinuousConstSMul 𝕜₃✝ G✝
inst✝ : ContinuousConstSMul 𝕜₂✝ F✝
L✝ : F✝ →SL[τ✝] G✝
f✝ : E✝ →SL[σ✝] F✝
⊢ (@ContinuousLinearMap.postcomp 𝕜₁✝ 𝕜₂✝ 𝕜₃✝ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ σ✝ τ✝ ρ✝ inst✝¹³ E✝ F✝ G✝ inst✝¹² inst✝¹¹ inst✝¹⁰
        inst✝⁹ inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴ inst✝³ inst✝² inst✝¹ inst✝ L✝)
      f✝ =
    L✝.comp f✝
Elapsed time : 1ms

Timestamp : 1736931659688
Testing tactic 1 || ContinuousLinearMap.postcomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  (E : Type u_4) {F : Type u_5} {G : Type u_6} [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup F] [inst_14 : TopologicalAddGroup G] [inst_15 : ContinuousConstSMul 𝕜₃ G]
  [inst_16 : ContinuousConstSMul 𝕜₂ F] (L : F →SL[τ] G) (f : E →SL[σ] F),
  (@ContinuousLinearMap.postcomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8
        inst_9 inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    L.comp f
Result.exception ::
unknown constant 'ContinuousLinearMap.postcomp'
Elapsed time : 3ms

Timestamp : 1736931659695
Testing tactic 2 || ContinuousLinearMap.postcomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  (E : Type u_4) {F : Type u_5} {G : Type u_6} [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup F] [inst_14 : TopologicalAddGroup G] [inst_15 : ContinuousConstSMul 𝕜₃ G]
  [inst_16 : ContinuousConstSMul 𝕜₂ F] (L : F →SL[τ] G) (f : E →SL[σ] F),
  (@ContinuousLinearMap.postcomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8
        inst_9 inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    L.comp f
Result.exception ::
unknown constant 'ContinuousLinearMap.postcomp'
Elapsed time : 4ms

Timestamp : 1736931659702
Testing tactic 3 || ContinuousLinearMap.postcomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  (E : Type u_4) {F : Type u_5} {G : Type u_6} [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup F] [inst_14 : TopologicalAddGroup G] [inst_15 : ContinuousConstSMul 𝕜₃ G]
  [inst_16 : ContinuousConstSMul 𝕜₂ F] (L : F →SL[τ] G) (f : E →SL[σ] F),
  (@ContinuousLinearMap.postcomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8
        inst_9 inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    L.comp f
Result.exception ::
aesop: error in norm unfold: unknown constant 'ContinuousLinearMap.postcomp'
Elapsed time : 11ms

Timestamp : 1736931659716
Testing tactic 4 || ContinuousLinearMap.postcomp_apply : ∀ {𝕜₁ : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} [inst : NormedField 𝕜₁] [inst_1 : NormedField 𝕜₂]
  [inst_2 : NormedField 𝕜₃] {σ : 𝕜₁ →+* 𝕜₂} {τ : 𝕜₂ →+* 𝕜₃} {ρ : 𝕜₁ →+* 𝕜₃} [inst_3 : RingHomCompTriple σ τ ρ]
  (E : Type u_4) {F : Type u_5} {G : Type u_6} [inst_4 : AddCommGroup E] [inst_5 : Module 𝕜₁ E]
  [inst_6 : AddCommGroup F] [inst_7 : Module 𝕜₂ F] [inst_8 : AddCommGroup G] [inst_9 : Module 𝕜₃ G]
  [inst_10 : TopologicalSpace E] [inst_11 : TopologicalSpace F] [inst_12 : TopologicalSpace G]
  [inst_13 : TopologicalAddGroup F] [inst_14 : TopologicalAddGroup G] [inst_15 : ContinuousConstSMul 𝕜₃ G]
  [inst_16 : ContinuousConstSMul 𝕜₂ F] (L : F →SL[τ] G) (f : E →SL[σ] F),
  (@ContinuousLinearMap.postcomp 𝕜₁ 𝕜₂ 𝕜₃ inst inst_1 inst_2 σ τ ρ inst_3 E F G inst_4 inst_5 inst_6 inst_7 inst_8
        inst_9 inst_10 inst_11 inst_12 inst_13 inst_14 inst_15 inst_16 L)
      f =
    L.comp f
Result.exception ::
aesop: error in norm unfold: unknown constant 'ContinuousLinearMap.postcomp'
Elapsed time : 11ms

Timestamp : 1736931659934
Testing tactic 0 || ContinuousLinearMap.toLinearMap₂_apply : ∀ {𝕜 : Type u_1} [inst : NormedField 𝕜] {E : Type u_2} {F : Type u_3} {G : Type u_4} [inst_1 : AddCommGroup E]
  [inst_2 : Module 𝕜 E] [inst_3 : TopologicalSpace E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜 F]
  [inst_6 : TopologicalSpace F] [inst_7 : AddCommGroup G] [inst_8 : Module 𝕜 G] [inst_9 : TopologicalSpace G]
  [inst_10 : TopologicalAddGroup G] [inst_11 : ContinuousConstSMul 𝕜 G] (L : E →L[𝕜] F →L[𝕜] G) (v : E) (w : F),
  (L.toLinearMap₂ v) w = (L v) w
Result.success
Elapsed time : 5ms

Timestamp : 1736931659942
Testing tactic 1 || ContinuousLinearMap.toLinearMap₂_apply : ∀ {𝕜 : Type u_1} [inst : NormedField 𝕜] {E : Type u_2} {F : Type u_3} {G : Type u_4} [inst_1 : AddCommGroup E]
  [inst_2 : Module 𝕜 E] [inst_3 : TopologicalSpace E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜 F]
  [inst_6 : TopologicalSpace F] [inst_7 : AddCommGroup G] [inst_8 : Module 𝕜 G] [inst_9 : TopologicalSpace G]
  [inst_10 : TopologicalAddGroup G] [inst_11 : ContinuousConstSMul 𝕜 G] (L : E →L[𝕜] F →L[𝕜] G) (v : E) (w : F),
  (L.toLinearMap₂ v) w = (L v) w
Result.exception ::
simp_all made no progress
Elapsed time : 8ms

Timestamp : 1736931659953
Testing tactic 2 || ContinuousLinearMap.toLinearMap₂_apply : ∀ {𝕜 : Type u_1} [inst : NormedField 𝕜] {E : Type u_2} {F : Type u_3} {G : Type u_4} [inst_1 : AddCommGroup E]
  [inst_2 : Module 𝕜 E] [inst_3 : TopologicalSpace E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜 F]
  [inst_6 : TopologicalSpace F] [inst_7 : AddCommGroup G] [inst_8 : Module 𝕜 G] [inst_9 : TopologicalSpace G]
  [inst_10 : TopologicalAddGroup G] [inst_11 : ContinuousConstSMul 𝕜 G] (L : E →L[𝕜] F →L[𝕜] G) (v : E) (w : F),
  (L.toLinearMap₂ v) w = (L v) w
Result.exception ::
simp_all made no progress
Elapsed time : 8ms

Timestamp : 1736931659963
Testing tactic 3 || ContinuousLinearMap.toLinearMap₂_apply : ∀ {𝕜 : Type u_1} [inst : NormedField 𝕜] {E : Type u_2} {F : Type u_3} {G : Type u_4} [inst_1 : AddCommGroup E]
  [inst_2 : Module 𝕜 E] [inst_3 : TopologicalSpace E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜 F]
  [inst_6 : TopologicalSpace F] [inst_7 : AddCommGroup G] [inst_8 : Module 𝕜 G] [inst_9 : TopologicalSpace G]
  [inst_10 : TopologicalAddGroup G] [inst_11 : ContinuousConstSMul 𝕜 G] (L : E →L[𝕜] F →L[𝕜] G) (v : E) (w : F),
  (L.toLinearMap₂ v) w = (L v) w
Result.success
Elapsed time : 35ms

Timestamp : 1736931660001
Testing tactic 4 || ContinuousLinearMap.toLinearMap₂_apply : ∀ {𝕜 : Type u_1} [inst : NormedField 𝕜] {E : Type u_2} {F : Type u_3} {G : Type u_4} [inst_1 : AddCommGroup E]
  [inst_2 : Module 𝕜 E] [inst_3 : TopologicalSpace E] [inst_4 : AddCommGroup F] [inst_5 : Module 𝕜 F]
  [inst_6 : TopologicalSpace F] [inst_7 : AddCommGroup G] [inst_8 : Module 𝕜 G] [inst_9 : TopologicalSpace G]
  [inst_10 : TopologicalAddGroup G] [inst_11 : ContinuousConstSMul 𝕜 G] (L : E →L[𝕜] F →L[𝕜] G) (v : E) (w : F),
  (L.toLinearMap₂ v) w = (L v) w
Result.success
Elapsed time : 36ms

Timestamp : 1736931660276
Testing tactic 0 || ContinuousLinearMap.isUniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.uniformSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.restrictScalars 𝕜'✝
𝕜✝ : Type u_1
inst✝¹⁴ : NontriviallyNormedField 𝕜✝
E✝ : Type u_2
inst✝¹³ : AddCommGroup E✝
inst✝¹² : TopologicalSpace E✝
inst✝¹¹ : Module 𝕜✝ E✝
inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
F✝ : Type u_3
inst✝⁹ : AddCommGroup F✝
inst✝⁸ : UniformSpace F✝
inst✝⁷ : UniformAddGroup F✝
inst✝⁶ : Module 𝕜✝ F✝
𝕜'✝ : Type u_4
inst✝⁵ : NontriviallyNormedField 𝕜'✝
inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
inst✝³ : Module 𝕜'✝ E✝
inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
inst✝¹ : Module 𝕜'✝ F✝
inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
⊢ IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 1ms

Timestamp : 1736931660281
Testing tactic 1 || ContinuousLinearMap.isUniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
simp_all made no progress
Elapsed time : 5ms

Timestamp : 1736931660287
Testing tactic 2 || ContinuousLinearMap.isUniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
simp_all made no progress
Elapsed time : 610ms

Timestamp : 1736931660900
Testing tactic 3 || ContinuousLinearMap.isUniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜✝ : Type u_1
  inst✝¹⁴ : NontriviallyNormedField 𝕜✝
  E✝ : Type u_2
  inst✝¹³ : AddCommGroup E✝
  inst✝¹² : TopologicalSpace E✝
  inst✝¹¹ : Module 𝕜✝ E✝
  inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
  F✝ : Type u_3
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : UniformSpace F✝
  inst✝⁷ : UniformAddGroup F✝
  inst✝⁶ : Module 𝕜✝ F✝
  𝕜'✝ : Type u_4
  inst✝⁵ : NontriviallyNormedField 𝕜'✝
  inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
  inst✝³ : Module 𝕜'✝ E✝
  inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
  inst✝¹ : Module 𝕜'✝ F✝
  inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
  ⊢ IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 31ms

Timestamp : 1736931660935
Testing tactic 4 || ContinuousLinearMap.isUniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜✝ : Type u_1
  inst✝¹⁴ : NontriviallyNormedField 𝕜✝
  E✝ : Type u_2
  inst✝¹³ : AddCommGroup E✝
  inst✝¹² : TopologicalSpace E✝
  inst✝¹¹ : Module 𝕜✝ E✝
  inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
  F✝ : Type u_3
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : UniformSpace F✝
  inst✝⁷ : UniformAddGroup F✝
  inst✝⁶ : Module 𝕜✝ F✝
  𝕜'✝ : Type u_4
  inst✝⁵ : NontriviallyNormedField 𝕜'✝
  inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
  inst✝³ : Module 𝕜'✝ E✝
  inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
  inst✝¹ : Module 𝕜'✝ F✝
  inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
  ⊢ IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 33ms

Timestamp : 1736931660977
Testing tactic 0 || ContinuousLinearMap.uniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.uniformSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.restrictScalars 𝕜'✝
𝕜✝ : Type u_1
inst✝¹⁴ : NontriviallyNormedField 𝕜✝
E✝ : Type u_2
inst✝¹³ : AddCommGroup E✝
inst✝¹² : TopologicalSpace E✝
inst✝¹¹ : Module 𝕜✝ E✝
inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
F✝ : Type u_3
inst✝⁹ : AddCommGroup F✝
inst✝⁸ : UniformSpace F✝
inst✝⁷ : UniformAddGroup F✝
inst✝⁶ : Module 𝕜✝ F✝
𝕜'✝ : Type u_4
inst✝⁵ : NontriviallyNormedField 𝕜'✝
inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
inst✝³ : Module 𝕜'✝ E✝
inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
inst✝¹ : Module 𝕜'✝ F✝
inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
⊢ IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 0ms

Timestamp : 1736931660982
Testing tactic 1 || ContinuousLinearMap.uniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931660987
Testing tactic 2 || ContinuousLinearMap.uniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.success
Elapsed time : 12ms

Timestamp : 1736931661001
Testing tactic 3 || ContinuousLinearMap.uniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜✝ : Type u_1
  inst✝¹⁴ : NontriviallyNormedField 𝕜✝
  E✝ : Type u_2
  inst✝¹³ : AddCommGroup E✝
  inst✝¹² : TopologicalSpace E✝
  inst✝¹¹ : Module 𝕜✝ E✝
  inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
  F✝ : Type u_3
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : UniformSpace F✝
  inst✝⁷ : UniformAddGroup F✝
  inst✝⁶ : Module 𝕜✝ F✝
  𝕜'✝ : Type u_4
  inst✝⁵ : NontriviallyNormedField 𝕜'✝
  inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
  inst✝³ : Module 𝕜'✝ E✝
  inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
  inst✝¹ : Module 𝕜'✝ F✝
  inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
  ⊢ IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 29ms

Timestamp : 1736931661034
Testing tactic 4 || ContinuousLinearMap.uniformEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  IsUniformEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.success
Elapsed time : 34ms

Timestamp : 1736931661166
Testing tactic 0 || ContinuousLinearMap.uniformContinuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  UniformContinuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.uniformSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.restrictScalars 𝕜'✝
𝕜✝ : Type u_1
inst✝¹⁴ : NontriviallyNormedField 𝕜✝
E✝ : Type u_2
inst✝¹³ : AddCommGroup E✝
inst✝¹² : TopologicalSpace E✝
inst✝¹¹ : Module 𝕜✝ E✝
inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
F✝ : Type u_3
inst✝⁹ : AddCommGroup F✝
inst✝⁸ : UniformSpace F✝
inst✝⁷ : UniformAddGroup F✝
inst✝⁶ : Module 𝕜✝ F✝
𝕜'✝ : Type u_4
inst✝⁵ : NontriviallyNormedField 𝕜'✝
inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
inst✝³ : Module 𝕜'✝ E✝
inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
inst✝¹ : Module 𝕜'✝ F✝
inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
⊢ UniformContinuous (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 2ms

Timestamp : 1736931661171
Testing tactic 1 || ContinuousLinearMap.uniformContinuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  UniformContinuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931661177
Testing tactic 2 || ContinuousLinearMap.uniformContinuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  UniformContinuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.success
Elapsed time : 17ms

Timestamp : 1736931661196
Testing tactic 3 || ContinuousLinearMap.uniformContinuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  UniformContinuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜✝ : Type u_1
  inst✝¹⁴ : NontriviallyNormedField 𝕜✝
  E✝ : Type u_2
  inst✝¹³ : AddCommGroup E✝
  inst✝¹² : TopologicalSpace E✝
  inst✝¹¹ : Module 𝕜✝ E✝
  inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
  F✝ : Type u_3
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : UniformSpace F✝
  inst✝⁷ : UniformAddGroup F✝
  inst✝⁶ : Module 𝕜✝ F✝
  𝕜'✝ : Type u_4
  inst✝⁵ : NontriviallyNormedField 𝕜'✝
  inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
  inst✝³ : Module 𝕜'✝ E✝
  inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
  inst✝¹ : Module 𝕜'✝ F✝
  inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
  ⊢ UniformContinuous (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 35ms

Timestamp : 1736931661235
Testing tactic 4 || ContinuousLinearMap.uniformContinuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : UniformSpace F] [inst_7 : UniformAddGroup F] [inst_8 : Module 𝕜 F] (𝕜' : Type u_4)
  [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  UniformContinuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.success
Elapsed time : 79ms

Timestamp : 1736931661449
Testing tactic 0 || ContinuousLinearMap.isEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.topologicalSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.restrictScalars 𝕜'✝
𝕜✝ : Type u_1
inst✝¹⁴ : NontriviallyNormedField 𝕜✝
E✝ : Type u_2
inst✝¹³ : AddCommGroup E✝
inst✝¹² : TopologicalSpace E✝
inst✝¹¹ : Module 𝕜✝ E✝
inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
F✝ : Type u_3
inst✝⁹ : AddCommGroup F✝
inst✝⁸ : TopologicalSpace F✝
inst✝⁷ : TopologicalAddGroup F✝
inst✝⁶ : Module 𝕜✝ F✝
𝕜'✝ : Type u_4
inst✝⁵ : NontriviallyNormedField 𝕜'✝
inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
inst✝³ : Module 𝕜'✝ E✝
inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
inst✝¹ : Module 𝕜'✝ F✝
inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
⊢ Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 0ms

Timestamp : 1736931661454
Testing tactic 1 || ContinuousLinearMap.isEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931661459
Testing tactic 2 || ContinuousLinearMap.isEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
simp_all made no progress
Elapsed time : 14ms

Timestamp : 1736931661476
Testing tactic 3 || ContinuousLinearMap.isEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜✝ : Type u_1
  inst✝¹⁴ : NontriviallyNormedField 𝕜✝
  E✝ : Type u_2
  inst✝¹³ : AddCommGroup E✝
  inst✝¹² : TopologicalSpace E✝
  inst✝¹¹ : Module 𝕜✝ E✝
  inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
  F✝ : Type u_3
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : TopologicalSpace F✝
  inst✝⁷ : TopologicalAddGroup F✝
  inst✝⁶ : Module 𝕜✝ F✝
  𝕜'✝ : Type u_4
  inst✝⁵ : NontriviallyNormedField 𝕜'✝
  inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
  inst✝³ : Module 𝕜'✝ E✝
  inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
  inst✝¹ : Module 𝕜'✝ F✝
  inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
  ⊢ Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 29ms

Timestamp : 1736931661507
Testing tactic 4 || ContinuousLinearMap.isEmbedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜✝ : Type u_1
  inst✝¹⁴ : NontriviallyNormedField 𝕜✝
  E✝ : Type u_2
  inst✝¹³ : AddCommGroup E✝
  inst✝¹² : TopologicalSpace E✝
  inst✝¹¹ : Module 𝕜✝ E✝
  inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
  F✝ : Type u_3
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : TopologicalSpace F✝
  inst✝⁷ : TopologicalAddGroup F✝
  inst✝⁶ : Module 𝕜✝ F✝
  𝕜'✝ : Type u_4
  inst✝⁵ : NontriviallyNormedField 𝕜'✝
  inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
  inst✝³ : Module 𝕜'✝ E✝
  inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
  inst✝¹ : Module 𝕜'✝ F✝
  inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
  ⊢ Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 37ms

Timestamp : 1736931661554
Testing tactic 0 || ContinuousLinearMap.embedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.topologicalSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.restrictScalars 𝕜'✝
𝕜✝ : Type u_1
inst✝¹⁴ : NontriviallyNormedField 𝕜✝
E✝ : Type u_2
inst✝¹³ : AddCommGroup E✝
inst✝¹² : TopologicalSpace E✝
inst✝¹¹ : Module 𝕜✝ E✝
inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
F✝ : Type u_3
inst✝⁹ : AddCommGroup F✝
inst✝⁸ : TopologicalSpace F✝
inst✝⁷ : TopologicalAddGroup F✝
inst✝⁶ : Module 𝕜✝ F✝
𝕜'✝ : Type u_4
inst✝⁵ : NontriviallyNormedField 𝕜'✝
inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
inst✝³ : Module 𝕜'✝ E✝
inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
inst✝¹ : Module 𝕜'✝ F✝
inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
⊢ Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 1ms

Timestamp : 1736931661558
Testing tactic 1 || ContinuousLinearMap.embedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931661564
Testing tactic 2 || ContinuousLinearMap.embedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.success
Elapsed time : 11ms

Timestamp : 1736931661578
Testing tactic 3 || ContinuousLinearMap.embedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜✝ : Type u_1
  inst✝¹⁴ : NontriviallyNormedField 𝕜✝
  E✝ : Type u_2
  inst✝¹³ : AddCommGroup E✝
  inst✝¹² : TopologicalSpace E✝
  inst✝¹¹ : Module 𝕜✝ E✝
  inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
  F✝ : Type u_3
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : TopologicalSpace F✝
  inst✝⁷ : TopologicalAddGroup F✝
  inst✝⁶ : Module 𝕜✝ F✝
  𝕜'✝ : Type u_4
  inst✝⁵ : NontriviallyNormedField 𝕜'✝
  inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
  inst✝³ : Module 𝕜'✝ E✝
  inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
  inst✝¹ : Module 𝕜'✝ F✝
  inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
  ⊢ Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 30ms

Timestamp : 1736931661611
Testing tactic 4 || ContinuousLinearMap.embedding_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Topology.IsEmbedding (ContinuousLinearMap.restrictScalars 𝕜')
Result.success
Elapsed time : 36ms

Timestamp : 1736931661743
Testing tactic 0 || ContinuousLinearMap.continuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Continuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'rfl' failed, the left-hand side
  ContinuousLinearMap.topologicalSpace
is not definitionally equal to the right-hand side
  ContinuousLinearMap.restrictScalars 𝕜'✝
𝕜✝ : Type u_1
inst✝¹⁴ : NontriviallyNormedField 𝕜✝
E✝ : Type u_2
inst✝¹³ : AddCommGroup E✝
inst✝¹² : TopologicalSpace E✝
inst✝¹¹ : Module 𝕜✝ E✝
inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
F✝ : Type u_3
inst✝⁹ : AddCommGroup F✝
inst✝⁸ : TopologicalSpace F✝
inst✝⁷ : TopologicalAddGroup F✝
inst✝⁶ : Module 𝕜✝ F✝
𝕜'✝ : Type u_4
inst✝⁵ : NontriviallyNormedField 𝕜'✝
inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
inst✝³ : Module 𝕜'✝ E✝
inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
inst✝¹ : Module 𝕜'✝ F✝
inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
⊢ Continuous (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 1ms

Timestamp : 1736931661748
Testing tactic 1 || ContinuousLinearMap.continuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Continuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
simp_all made no progress
Elapsed time : 4ms

Timestamp : 1736931661754
Testing tactic 2 || ContinuousLinearMap.continuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Continuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.success
Elapsed time : 14ms

Timestamp : 1736931661770
Testing tactic 3 || ContinuousLinearMap.continuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Continuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.exception ::
tactic 'aesop' failed, made no progress
Initial goal:
  𝕜✝ : Type u_1
  inst✝¹⁴ : NontriviallyNormedField 𝕜✝
  E✝ : Type u_2
  inst✝¹³ : AddCommGroup E✝
  inst✝¹² : TopologicalSpace E✝
  inst✝¹¹ : Module 𝕜✝ E✝
  inst✝¹⁰ : ContinuousSMul 𝕜✝ E✝
  F✝ : Type u_3
  inst✝⁹ : AddCommGroup F✝
  inst✝⁸ : TopologicalSpace F✝
  inst✝⁷ : TopologicalAddGroup F✝
  inst✝⁶ : Module 𝕜✝ F✝
  𝕜'✝ : Type u_4
  inst✝⁵ : NontriviallyNormedField 𝕜'✝
  inst✝⁴ : NormedAlgebra 𝕜'✝ 𝕜✝
  inst✝³ : Module 𝕜'✝ E✝
  inst✝² : IsScalarTower 𝕜'✝ 𝕜✝ E✝
  inst✝¹ : Module 𝕜'✝ F✝
  inst✝ : IsScalarTower 𝕜'✝ 𝕜✝ F✝
  ⊢ Continuous (ContinuousLinearMap.restrictScalars 𝕜'✝) Elapsed time : 28ms

Timestamp : 1736931661802
Testing tactic 4 || ContinuousLinearMap.continuous_restrictScalars : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  (𝕜' : Type u_4) [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F],
  Continuous (ContinuousLinearMap.restrictScalars 𝕜')
Result.success
Elapsed time : 59ms

Timestamp : 1736931662405
Testing tactic 0 || ContinuousLinearMap.coe_restrictScalarsL : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ↑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalarsₗ 𝕜 E F 𝕜' 𝕜''
Result.success
Elapsed time : 4ms

Timestamp : 1736931662411
Testing tactic 1 || ContinuousLinearMap.coe_restrictScalarsL : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ↑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalarsₗ 𝕜 E F 𝕜' 𝕜''
Result.exception ::
simp_all made no progress
Elapsed time : 6ms

Timestamp : 1736931662420
Testing tactic 2 || ContinuousLinearMap.coe_restrictScalarsL : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ↑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalarsₗ 𝕜 E F 𝕜' 𝕜''
Result.exception ::
simp_all made no progress
Elapsed time : 7ms

Timestamp : 1736931662429
Testing tactic 3 || ContinuousLinearMap.coe_restrictScalarsL : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ↑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalarsₗ 𝕜 E F 𝕜' 𝕜''
Result.success
Elapsed time : 35ms

Timestamp : 1736931662467
Testing tactic 4 || ContinuousLinearMap.coe_restrictScalarsL : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ↑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalarsₗ 𝕜 E F 𝕜' 𝕜''
Result.success
Elapsed time : 35ms

Timestamp : 1736931662587
Testing tactic 0 || ContinuousLinearMap.coe_restrict_scalarsL' : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ⇑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalars 𝕜'
Result.success
Elapsed time : 4ms

Timestamp : 1736931662595
Testing tactic 1 || ContinuousLinearMap.coe_restrict_scalarsL' : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ⇑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalars 𝕜'
Result.exception ::
simp_all made no progress
Elapsed time : 7ms

Timestamp : 1736931662604
Testing tactic 2 || ContinuousLinearMap.coe_restrict_scalarsL' : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ⇑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalars 𝕜'
Result.exception ::
simp_all made no progress
Elapsed time : 6ms

Timestamp : 1736931662614
Testing tactic 3 || ContinuousLinearMap.coe_restrict_scalarsL' : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ⇑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalars 𝕜'
Result.success
Elapsed time : 38ms

Timestamp : 1736931662654
Testing tactic 4 || ContinuousLinearMap.coe_restrict_scalarsL' : ∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : AddCommGroup E]
  [inst_2 : TopologicalSpace E] [inst_3 : Module 𝕜 E] [inst_4 : ContinuousSMul 𝕜 E] {F : Type u_3}
  [inst_5 : AddCommGroup F] [inst_6 : TopologicalSpace F] [inst_7 : TopologicalAddGroup F] [inst_8 : Module 𝕜 F]
  {𝕜' : Type u_4} [inst_9 : NontriviallyNormedField 𝕜'] [inst_10 : NormedAlgebra 𝕜' 𝕜] [inst_11 : Module 𝕜' E]
  [inst_12 : IsScalarTower 𝕜' 𝕜 E] [inst_13 : Module 𝕜' F] [inst_14 : IsScalarTower 𝕜' 𝕜 F] {𝕜'' : Type u_5}
  [inst_15 : Ring 𝕜''] [inst_16 : Module 𝕜'' F] [inst_17 : ContinuousConstSMul 𝕜'' F] [inst_18 : SMulCommClass 𝕜 𝕜'' F]
  [inst_19 : SMulCommClass 𝕜' 𝕜'' F],
  ⇑(ContinuousLinearMap.restrictScalarsL 𝕜 E F 𝕜' 𝕜'') = ContinuousLinearMap.restrictScalars 𝕜'
Result.success
Elapsed time : 41ms

Timestamp : 1736931663319
Testing tactic 0 || ContinuousLinearEquiv.arrowCongrSL_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
tactic 'rfl' failed, the left-hand side
  (@ContinuousLinearEquiv.arrowCongrSL 𝕜✝ 𝕜₂✝ 𝕜₃✝ 𝕜₄✝ E✝ F✝ G✝ H✝ inst✝³¹ inst✝³⁰ inst✝²⁹ inst✝²⁸ inst✝²⁷ inst✝²⁶
      inst✝²⁵ inst✝²⁴ inst✝²³ inst✝²² inst✝²¹ inst✝²⁰ inst✝¹⁹ inst✝¹⁸ inst✝¹⁷ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ inst✝¹³ inst✝¹²
      σ₁₂✝ σ₂₁✝ σ₂₃✝ σ₁₃✝ σ₃₄✝ σ₄₃✝ σ₂₄✝ σ₁₄✝ inst✝¹¹ inst✝¹⁰ inst✝⁹ inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴ inst✝³ inst✝²
      inst✝¹ inst✝ e₁₂✝ e₄₃✝)
    L✝
is not definitionally equal to the right-hand side
  (↑e₄₃✝).comp (L✝.comp ↑e₁₂✝.symm)
𝕜✝ : Type u_1
𝕜₂✝ : Type u_2
𝕜₃✝ : Type u_3
𝕜₄✝ : Type u_4
E✝ : Type u_5
F✝ : Type u_6
G✝ : Type u_7
H✝ : Type u_8
inst✝³¹ : AddCommGroup E✝
inst✝³⁰ : AddCommGroup F✝
inst✝²⁹ : AddCommGroup G✝
inst✝²⁸ : AddCommGroup H✝
inst✝²⁷ : NormedField 𝕜✝
inst✝²⁶ : NormedField 𝕜₂✝
inst✝²⁵ : NormedField 𝕜₃✝
inst✝²⁴ : NormedField 𝕜₄✝
inst✝²³ : Module 𝕜✝ E✝
inst✝²² : Module 𝕜₂✝ F✝
inst✝²¹ : Module 𝕜₃✝ G✝
inst✝²⁰ : Module 𝕜₄✝ H✝
inst✝¹⁹ : TopologicalSpace E✝
inst✝¹⁸ : TopologicalSpace F✝
inst✝¹⁷ : TopologicalSpace G✝
inst✝¹⁶ : TopologicalSpace H✝
inst✝¹⁵ : TopologicalAddGroup G✝
inst✝¹⁴ : TopologicalAddGroup H✝
inst✝¹³ : ContinuousConstSMul 𝕜₃✝ G✝
inst✝¹² : ContinuousConstSMul 𝕜₄✝ H✝
σ₁₂✝ : 𝕜✝ →+* 𝕜₂✝
σ₂₁✝ : 𝕜₂✝ →+* 𝕜✝
σ₂₃✝ : 𝕜₂✝ →+* 𝕜₃✝
σ₁₃✝ : 𝕜✝ →+* 𝕜₃✝
σ₃₄✝ : 𝕜₃✝ →+* 𝕜₄✝
σ₄₃✝ : 𝕜₄✝ →+* 𝕜₃✝
σ₂₄✝ : 𝕜₂✝ →+* 𝕜₄✝
σ₁₄✝ : 𝕜✝ →+* 𝕜₄✝
inst✝¹¹ : RingHomInvPair σ₁₂✝ σ₂₁✝
inst✝¹⁰ : RingHomInvPair σ₂₁✝ σ₁₂✝
inst✝⁹ : RingHomInvPair σ₃₄✝ σ₄₃✝
inst✝⁸ : RingHomInvPair σ₄₃✝ σ₃₄✝
inst✝⁷ : RingHomCompTriple σ₂₁✝ σ₁₄✝ σ₂₄✝
inst✝⁶ : RingHomCompTriple σ₂₄✝ σ₄₃✝ σ₂₃✝
inst✝⁵ : RingHomCompTriple σ₁₂✝ σ₂₃✝ σ₁₃✝
inst✝⁴ : RingHomCompTriple σ₁₃✝ σ₃₄✝ σ₁₄✝
inst✝³ : RingHomCompTriple σ₂₃✝ σ₃₄✝ σ₂₄✝
inst✝² : RingHomCompTriple σ₁₂✝ σ₂₄✝ σ₁₄✝
inst✝¹ : RingHomIsometric σ₁₂✝
inst✝ : RingHomIsometric σ₂₁✝
e₁₂✝ : E✝ ≃SL[σ₁₂✝] F✝
e₄₃✝ : H✝ ≃SL[σ₄₃✝] G✝
L✝ : E✝ →SL[σ₁₄✝] H✝
⊢ (@ContinuousLinearEquiv.arrowCongrSL 𝕜✝ 𝕜₂✝ 𝕜₃✝ 𝕜₄✝ E✝ F✝ G✝ H✝ inst✝³¹ inst✝³⁰ inst✝²⁹ inst✝²⁸ inst✝²⁷ inst✝²⁶
        inst✝²⁵ inst✝²⁴ inst✝²³ inst✝²² inst✝²¹ inst✝²⁰ inst✝¹⁹ inst✝¹⁸ inst✝¹⁷ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ inst✝¹³ inst✝¹²
        σ₁₂✝ σ₂₁✝ σ₂₃✝ σ₁₃✝ σ₃₄✝ σ₄₃✝ σ₂₄✝ σ₁₄✝ inst✝¹¹ inst✝¹⁰ inst✝⁹ inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴ inst✝³ inst✝²
        inst✝¹ inst✝ e₁₂✝ e₄₃✝)
      L✝ =
    (↑e₄₃✝).comp (L✝.comp ↑e₁₂✝.symm)
Elapsed time : 1ms

Timestamp : 1736931663333
Testing tactic 1 || ContinuousLinearEquiv.arrowCongrSL_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
unknown constant 'ContinuousLinearEquiv.arrowCongrSL'
Elapsed time : 6ms

Timestamp : 1736931663345
Testing tactic 2 || ContinuousLinearEquiv.arrowCongrSL_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
unknown constant 'ContinuousLinearEquiv.arrowCongrSL'
Elapsed time : 7ms

Timestamp : 1736931663358
Testing tactic 3 || ContinuousLinearEquiv.arrowCongrSL_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
aesop: error in norm unfold: unknown constant 'ContinuousLinearEquiv.arrowCongrSL'
Elapsed time : 13ms

Timestamp : 1736931663379
Testing tactic 4 || ContinuousLinearEquiv.arrowCongrSL_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
aesop: error in norm unfold: unknown constant 'ContinuousLinearEquiv.arrowCongrSL'
Elapsed time : 14ms

Timestamp : 1736931663400
Testing tactic 0 || ContinuousLinearEquiv.arrowCongrSL_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
tactic 'rfl' failed, the left-hand side
  (ContinuousLinearEquiv.symm
      (@ContinuousLinearEquiv.arrowCongrSL 𝕜✝ 𝕜₂✝ 𝕜₃✝ 𝕜₄✝ E✝ F✝ G✝ H✝ inst✝³¹ inst✝³⁰ inst✝²⁹ inst✝²⁸ inst✝²⁷ inst✝²⁶
        inst✝²⁵ inst✝²⁴ inst✝²³ inst✝²² inst✝²¹ inst✝²⁰ inst✝¹⁹ inst✝¹⁸ inst✝¹⁷ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ inst✝¹³ inst✝¹²
        σ₁₂✝ σ₂₁✝ σ₂₃✝ σ₁₃✝ σ₃₄✝ σ₄₃✝ σ₂₄✝ σ₁₄✝ inst✝¹¹ inst✝¹⁰ inst✝⁹ inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴ inst✝³ inst✝²
        inst✝¹ inst✝ e₁₂✝ e₄₃✝))
    L✝
is not definitionally equal to the right-hand side
  (↑e₄₃✝.symm).comp (L✝.comp ↑e₁₂✝)
𝕜✝ : Type u_1
𝕜₂✝ : Type u_2
𝕜₃✝ : Type u_3
𝕜₄✝ : Type u_4
E✝ : Type u_5
F✝ : Type u_6
G✝ : Type u_7
H✝ : Type u_8
inst✝³¹ : AddCommGroup E✝
inst✝³⁰ : AddCommGroup F✝
inst✝²⁹ : AddCommGroup G✝
inst✝²⁸ : AddCommGroup H✝
inst✝²⁷ : NormedField 𝕜✝
inst✝²⁶ : NormedField 𝕜₂✝
inst✝²⁵ : NormedField 𝕜₃✝
inst✝²⁴ : NormedField 𝕜₄✝
inst✝²³ : Module 𝕜✝ E✝
inst✝²² : Module 𝕜₂✝ F✝
inst✝²¹ : Module 𝕜₃✝ G✝
inst✝²⁰ : Module 𝕜₄✝ H✝
inst✝¹⁹ : TopologicalSpace E✝
inst✝¹⁸ : TopologicalSpace F✝
inst✝¹⁷ : TopologicalSpace G✝
inst✝¹⁶ : TopologicalSpace H✝
inst✝¹⁵ : TopologicalAddGroup G✝
inst✝¹⁴ : TopologicalAddGroup H✝
inst✝¹³ : ContinuousConstSMul 𝕜₃✝ G✝
inst✝¹² : ContinuousConstSMul 𝕜₄✝ H✝
σ₁₂✝ : 𝕜✝ →+* 𝕜₂✝
σ₂₁✝ : 𝕜₂✝ →+* 𝕜✝
σ₂₃✝ : 𝕜₂✝ →+* 𝕜₃✝
σ₁₃✝ : 𝕜✝ →+* 𝕜₃✝
σ₃₄✝ : 𝕜₃✝ →+* 𝕜₄✝
σ₄₃✝ : 𝕜₄✝ →+* 𝕜₃✝
σ₂₄✝ : 𝕜₂✝ →+* 𝕜₄✝
σ₁₄✝ : 𝕜✝ →+* 𝕜₄✝
inst✝¹¹ : RingHomInvPair σ₁₂✝ σ₂₁✝
inst✝¹⁰ : RingHomInvPair σ₂₁✝ σ₁₂✝
inst✝⁹ : RingHomInvPair σ₃₄✝ σ₄₃✝
inst✝⁸ : RingHomInvPair σ₄₃✝ σ₃₄✝
inst✝⁷ : RingHomCompTriple σ₂₁✝ σ₁₄✝ σ₂₄✝
inst✝⁶ : RingHomCompTriple σ₂₄✝ σ₄₃✝ σ₂₃✝
inst✝⁵ : RingHomCompTriple σ₁₂✝ σ₂₃✝ σ₁₃✝
inst✝⁴ : RingHomCompTriple σ₁₃✝ σ₃₄✝ σ₁₄✝
inst✝³ : RingHomCompTriple σ₂₃✝ σ₃₄✝ σ₂₄✝
inst✝² : RingHomCompTriple σ₁₂✝ σ₂₄✝ σ₁₄✝
inst✝¹ : RingHomIsometric σ₁₂✝
inst✝ : RingHomIsometric σ₂₁✝
e₁₂✝ : E✝ ≃SL[σ₁₂✝] F✝
e₄₃✝ : H✝ ≃SL[σ₄₃✝] G✝
L✝ : F✝ →SL[σ₂₃✝] G✝
⊢ (ContinuousLinearEquiv.symm
        (@ContinuousLinearEquiv.arrowCongrSL 𝕜✝ 𝕜₂✝ 𝕜₃✝ 𝕜₄✝ E✝ F✝ G✝ H✝ inst✝³¹ inst✝³⁰ inst✝²⁹ inst✝²⁸ inst✝²⁷ inst✝²⁶
          inst✝²⁵ inst✝²⁴ inst✝²³ inst✝²² inst✝²¹ inst✝²⁰ inst✝¹⁹ inst✝¹⁸ inst✝¹⁷ inst✝¹⁶ inst✝¹⁵ inst✝¹⁴ inst✝¹³
          inst✝¹² σ₁₂✝ σ₂₁✝ σ₂₃✝ σ₁₃✝ σ₃₄✝ σ₄₃✝ σ₂₄✝ σ₁₄✝ inst✝¹¹ inst✝¹⁰ inst✝⁹ inst✝⁸ inst✝⁷ inst✝⁶ inst✝⁵ inst✝⁴
          inst✝³ inst✝² inst✝¹ inst✝ e₁₂✝ e₄₃✝))
      L✝ =
    (↑e₄₃✝.symm).comp (L✝.comp ↑e₁₂✝)
Elapsed time : 2ms

Timestamp : 1736931663416
Testing tactic 1 || ContinuousLinearEquiv.arrowCongrSL_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
unknown constant 'ContinuousLinearEquiv.arrowCongrSL'
Elapsed time : 8ms

Timestamp : 1736931663431
Testing tactic 2 || ContinuousLinearEquiv.arrowCongrSL_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
unknown constant 'ContinuousLinearEquiv.arrowCongrSL'
Elapsed time : 8ms

Timestamp : 1736931663446
Testing tactic 3 || ContinuousLinearEquiv.arrowCongrSL_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
aesop: error in norm unfold: unknown constant 'ContinuousLinearEquiv.arrowCongrSL'
Elapsed time : 14ms

Timestamp : 1736931663467
Testing tactic 4 || ContinuousLinearEquiv.arrowCongrSL_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
aesop: error in norm unfold: unknown constant 'ContinuousLinearEquiv.arrowCongrSL'
Elapsed time : 15ms

Timestamp : 1736931663645
Testing tactic 0 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.success
Elapsed time : 8ms

Timestamp : 1736931663660
Testing tactic 1 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.success
Elapsed time : 34ms

Timestamp : 1736931663700
Testing tactic 2 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.success
Elapsed time : 33ms

Timestamp : 1736931663741
Testing tactic 3 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.success
Elapsed time : 84ms

Timestamp : 1736931663832
Testing tactic 4 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.success
Elapsed time : 86ms

Timestamp : 1736931664091
Testing tactic 0 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.success
Elapsed time : 8ms

Timestamp : 1736931664106
Testing tactic 1 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
simp_all made no progress
Elapsed time : 26ms

Timestamp : 1736931664139
Testing tactic 2 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.exception ::
simp_all made no progress
Elapsed time : 26ms

Timestamp : 1736931664172
Testing tactic 3 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.success
Elapsed time : 84ms

Timestamp : 1736931664263
Testing tactic 4 || ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_symm_apply : ∀ {𝕜 : Type u_1} {𝕜₂ : Type u_2} {𝕜₃ : Type u_3} {𝕜₄ : Type u_4} {E : Type u_5} {F : Type u_6} {G : Type u_7}
  {H : Type u_8} [inst : AddCommGroup E] [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H]
  [inst_4 : NormedField 𝕜] [inst_5 : NormedField 𝕜₂] [inst_6 : NormedField 𝕜₃] [inst_7 : NormedField 𝕜₄]
  [inst_8 : Module 𝕜 E] [inst_9 : Module 𝕜₂ F] [inst_10 : Module 𝕜₃ G] [inst_11 : Module 𝕜₄ H]
  [inst_12 : TopologicalSpace E] [inst_13 : TopologicalSpace F] [inst_14 : TopologicalSpace G]
  [inst_15 : TopologicalSpace H] [inst_16 : TopologicalAddGroup G] [inst_17 : TopologicalAddGroup H]
  [inst_18 : ContinuousConstSMul 𝕜₃ G] [inst_19 : ContinuousConstSMul 𝕜₄ H] {σ₁₂ : 𝕜 →+* 𝕜₂} {σ₂₁ : 𝕜₂ →+* 𝕜}
  {σ₂₃ : 𝕜₂ →+* 𝕜₃} {σ₁₃ : 𝕜 →+* 𝕜₃} {σ₃₄ : 𝕜₃ →+* 𝕜₄} {σ₄₃ : 𝕜₄ →+* 𝕜₃} {σ₂₄ : 𝕜₂ →+* 𝕜₄} {σ₁₄ : 𝕜 →+* 𝕜₄}
  [inst_20 : RingHomInvPair σ₁₂ σ₂₁] [inst_21 : RingHomInvPair σ₂₁ σ₁₂] [inst_22 : RingHomInvPair σ₃₄ σ₄₃]
  [inst_23 : RingHomInvPair σ₄₃ σ₃₄] [inst_24 : RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [inst_25 : RingHomCompTriple σ₂₄ σ₄₃ σ₂₃]
  [inst_26 : RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [inst_27 : RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]
  [inst_28 : RingHomCompTriple σ₂₃ σ₃₄ σ₂₄] [inst_29 : RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] [inst_30 : RingHomIsometric σ₁₂]
  [inst_31 : RingHomIsometric σ₂₁] (e₁₂ : E ≃SL[σ₁₂] F) (e₄₃ : H ≃SL[σ₄₃] G) (L : ⋯), ⋯
Result.success
Elapsed time : 81ms

Timestamp : 1736931664601
Testing tactic 0 || ContinuousLinearEquiv.arrowCongr_apply : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G) (f : E →L[𝕜] H) (x : F),
  ((e₁.arrowCongr e₂) f) x = e₂ (f (e₁.symm x))
Result.success
Elapsed time : 10ms

Timestamp : 1736931664615
Testing tactic 1 || ContinuousLinearEquiv.arrowCongr_apply : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G) (f : E →L[𝕜] H) (x : F),
  ((e₁.arrowCongr e₂) f) x = e₂ (f (e₁.symm x))
Result.exception ::
simp_all made no progress
Elapsed time : 13ms

Timestamp : 1736931664632
Testing tactic 2 || ContinuousLinearEquiv.arrowCongr_apply : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G) (f : E →L[𝕜] H) (x : F),
  ((e₁.arrowCongr e₂) f) x = e₂ (f (e₁.symm x))
Result.exception ::
simp_all made no progress
Elapsed time : 13ms

Timestamp : 1736931664650
Testing tactic 3 || ContinuousLinearEquiv.arrowCongr_apply : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G) (f : E →L[𝕜] H) (x : F),
  ((e₁.arrowCongr e₂) f) x = e₂ (f (e₁.symm x))
Result.success
Elapsed time : 57ms

Timestamp : 1736931664712
Testing tactic 4 || ContinuousLinearEquiv.arrowCongr_apply : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G) (f : E →L[𝕜] H) (x : F),
  ((e₁.arrowCongr e₂) f) x = e₂ (f (e₁.symm x))
Result.success
Elapsed time : 57ms

Timestamp : 1736931664913
Testing tactic 0 || ContinuousLinearEquiv.arrowCongr_symm : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G),
  (e₁.arrowCongr e₂).symm = e₁.symm.arrowCongr e₂.symm
Result.success
Elapsed time : 37ms

Timestamp : 1736931664954
Testing tactic 1 || ContinuousLinearEquiv.arrowCongr_symm : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G),
  (e₁.arrowCongr e₂).symm = e₁.symm.arrowCongr e₂.symm
Result.exception ::
simp_all made no progress
Elapsed time : 8ms

Timestamp : 1736931664967
Testing tactic 2 || ContinuousLinearEquiv.arrowCongr_symm : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G),
  (e₁.arrowCongr e₂).symm = e₁.symm.arrowCongr e₂.symm
Result.exception ::
simp_all made no progress
Elapsed time : 9ms

Timestamp : 1736931664980
Testing tactic 3 || ContinuousLinearEquiv.arrowCongr_symm : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G),
  (e₁.arrowCongr e₂).symm = e₁.symm.arrowCongr e₂.symm
Result.success
Elapsed time : 74ms

Timestamp : 1736931665057
Testing tactic 4 || ContinuousLinearEquiv.arrowCongr_symm : ∀ {𝕜 : Type u_1} {E : Type u_2} {F : Type u_3} {G : Type u_4} {H : Type u_5} [inst : AddCommGroup E]
  [inst_1 : AddCommGroup F] [inst_2 : AddCommGroup G] [inst_3 : AddCommGroup H] [inst_4 : NormedField 𝕜]
  [inst_5 : Module 𝕜 E] [inst_6 : Module 𝕜 F] [inst_7 : Module 𝕜 G] [inst_8 : Module 𝕜 H] [inst_9 : TopologicalSpace E]
  [inst_10 : TopologicalSpace F] [inst_11 : TopologicalSpace G] [inst_12 : TopologicalSpace H]
  [inst_13 : TopologicalAddGroup G] [inst_14 : TopologicalAddGroup H] [inst_15 : ContinuousConstSMul 𝕜 G]
  [inst_16 : ContinuousConstSMul 𝕜 H] (e₁ : E ≃L[𝕜] F) (e₂ : H ≃L[𝕜] G),
  (e₁.arrowCongr e₂).symm = e₁.symm.arrowCongr e₂.symm
Result.success
Elapsed time : 77ms
